syntax = "proto3";

package ai;

option go_package = "./ai";

// AI辅助服务
service AIService {
  // 智能聊天
  rpc ChatCompletion(ChatCompletionRequest) returns (ChatCompletionResponse) {}
  
  // 文本生成
  rpc TextGeneration(TextGenerationRequest) returns (TextGenerationResponse) {}
  
  // 图像生成
  rpc ImageGeneration(ImageGenerationRequest) returns (ImageGenerationResponse) {}
  
  // 图像识别
  rpc ImageRecognition(ImageRecognitionRequest) returns (ImageRecognitionResponse) {}
  
  // 文本翻译
  rpc Translation(TranslationRequest) returns (TranslationResponse) {}
  
  // 文本纠错
  rpc TextCorrection(TextCorrectionRequest) returns (TextCorrectionResponse) {}
  
  // 文本摘要
  rpc Summarization(SummarizationRequest) returns (SummarizationResponse) {}
  
  // 情感分析
  rpc SentimentAnalysis(SentimentAnalysisRequest) returns (SentimentAnalysisResponse) {}
}

// 聊天消息
message ChatMessage {
  string role = 1;    // 角色: system, user, assistant
  string content = 2; // 消息内容
}

// 智能聊天请求
message ChatCompletionRequest {
  repeated ChatMessage messages = 1; // 聊天消息列表
  string model = 2;                  // 使用的模型，可选
  int32 max_token = 3;               // 最大令牌数，默认2048
}

// 聊天选择
message ChatChoice {
  int32 index = 1;
  ChatMessage message = 2;
  string finish_reason = 3;
}

// 使用统计
message Usage {
  int32 prompt_tokens = 1;
  int32 completion_tokens = 2;
  int32 total_tokens = 3;
}

// 智能聊天响应
message ChatCompletionResponse {
  string id = 1;
  string object = 2;
  int64 created = 3;
  string model = 4;
  repeated ChatChoice choices = 5;
  Usage usage = 6;
}

// 文本生成请求
message TextGenerationRequest {
  string prompt = 1;   // 提示词
  int32 max_token = 2; // 最大令牌数，默认1024
  string model = 3;    // 使用的模型，可选
}

// 文本生成响应
message TextGenerationResponse {
  string text = 1;      // 生成的文本
  int32 tokens_used = 2; // 使用的令牌数
}

// 图像生成请求
message ImageGenerationRequest {
  string prompt = 1; // 提示词
  string size = 2;   // 图像尺寸，如 256x256, 512x512, 1024x1024
  int32 count = 3;   // 生成图像数量
  string style = 4;  // 图像风格，如 realistic, cartoon, sketch
}

// 图像生成响应
message ImageGenerationResponse {
  repeated string images = 1; // Base64编码的图像列表或图像URL列表
  int32 tokens_used = 2;      // 使用的令牌数
}

// 图像识别请求
message ImageRecognitionRequest {
  string image_url = 1;     // 图像URL
  string image_base64 = 2;  // Base64编码的图像
  string type = 3;          // 识别类型：general, product, text, face
}

// 识别结果
message RecognitionResult {
  string label = 1;       // 标签
  double confidence = 2;  // 置信度
  string description = 3; // 描述信息
}

// 图像识别响应
message ImageRecognitionResponse {
  repeated RecognitionResult results = 1; // 识别结果列表
  int32 tokens_used = 2;                 // 使用的令牌数
}

// 文本翻译请求
message TranslationRequest {
  string text = 1;        // 待翻译文本
  string source_lang = 2; // 源语言，如 auto, zh, en
  string target_lang = 3; // 目标语言，如 zh, en, ja
}

// 文本翻译响应
message TranslationResponse {
  string translated_text = 1; // 翻译后的文本
  string source_lang = 2;     // 识别的源语言
  int32 tokens_used = 3;      // 使用的令牌数
}

// 文本纠错请求
message TextCorrectionRequest {
  string text = 1; // 待纠错文本
}

// 纠错详情
message Correction {
  string original = 1;  // 原文本
  string corrected = 2; // 纠正后文本
  int32 position = 3;   // 位置
  string type = 4;      // 错误类型
}

// 文本纠错响应
message TextCorrectionResponse {
  string corrected_text = 1;        // 纠正后的文本
  repeated Correction corrections = 2; // 纠正详情
  int32 tokens_used = 3;            // 使用的令牌数
}

// 摘要生成请求
message SummarizationRequest {
  string text = 1;       // 待摘要文本
  int32 max_length = 2;  // 最大摘要长度
}

// 摘要生成响应
message SummarizationResponse {
  string summary = 1;     // 摘要内容
  int32 tokens_used = 2;  // 使用的令牌数
}

// 情感分析请求
message SentimentAnalysisRequest {
  string text = 1; // 待分析文本
}

// 情感分析响应
message SentimentAnalysisResponse {
  string sentiment = 1;   // 情感：positive, negative, neutral
  double score = 2;       // 情感分数
  int32 tokens_used = 3;  // 使用的令牌数
}