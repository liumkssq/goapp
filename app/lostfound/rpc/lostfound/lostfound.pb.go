// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.9
// source: lostfound.proto

package lostfound

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LostFoundType int32

const (
	LostFoundType_LOSTT  LostFoundType = 0 // 丢失
	LostFoundType_FOUNDT LostFoundType = 1 // 招领
)

// Enum value maps for LostFoundType.
var (
	LostFoundType_name = map[int32]string{
		0: "LOSTT",
		1: "FOUNDT",
	}
	LostFoundType_value = map[string]int32{
		"LOSTT":  0,
		"FOUNDT": 1,
	}
)

func (x LostFoundType) Enum() *LostFoundType {
	p := new(LostFoundType)
	*p = x
	return p
}

func (x LostFoundType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LostFoundType) Descriptor() protoreflect.EnumDescriptor {
	return file_lostfound_proto_enumTypes[0].Descriptor()
}

func (LostFoundType) Type() protoreflect.EnumType {
	return &file_lostfound_proto_enumTypes[0]
}

func (x LostFoundType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LostFoundType.Descriptor instead.
func (LostFoundType) EnumDescriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{0}
}

type LostFoundStatus int32

const (
	LostFoundStatus_PENDING LostFoundStatus = 0 // 待处理
	LostFoundStatus_FOUND   LostFoundStatus = 1 // 已找到
	LostFoundStatus_CLAIMED LostFoundStatus = 2 // 已认领
	LostFoundStatus_CLOSED  LostFoundStatus = 3 // 已关闭
)

// Enum value maps for LostFoundStatus.
var (
	LostFoundStatus_name = map[int32]string{
		0: "PENDING",
		1: "FOUND",
		2: "CLAIMED",
		3: "CLOSED",
	}
	LostFoundStatus_value = map[string]int32{
		"PENDING": 0,
		"FOUND":   1,
		"CLAIMED": 2,
		"CLOSED":  3,
	}
)

func (x LostFoundStatus) Enum() *LostFoundStatus {
	p := new(LostFoundStatus)
	*p = x
	return p
}

func (x LostFoundStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LostFoundStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lostfound_proto_enumTypes[1].Descriptor()
}

func (LostFoundStatus) Type() protoreflect.EnumType {
	return &file_lostfound_proto_enumTypes[1]
}

func (x LostFoundStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LostFoundStatus.Descriptor instead.
func (LostFoundStatus) EnumDescriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{1}
}

// 失物招领详情
type LostFoundItem struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// string type = 4; // lost 或 found
	Type           LostFoundType     `protobuf:"varint,4,opt,name=type,proto3,enum=lostfound.LostFoundType" json:"type,omitempty"` // lost 或 found
	Category       string            `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Location       string            `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	LocationDetail map[string]string `protobuf:"bytes,7,rep,name=location_detail,json=locationDetail,proto3" json:"location_detail,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 详细位置信息
	ContactInfo    string            `protobuf:"bytes,8,opt,name=contact_info,json=contactInfo,proto3" json:"contact_info,omitempty"`
	ContactWay     string            `protobuf:"bytes,9,opt,name=contact_way,json=contactWay,proto3" json:"contact_way,omitempty"`
	Images         []string          `protobuf:"bytes,10,rep,name=images,proto3" json:"images,omitempty"`
	// string status = 11; // pending, found, claimed, closed
	Status          LostFoundStatus `protobuf:"varint,11,opt,name=status,proto3,enum=lostfound.LostFoundStatus" json:"status,omitempty"`
	Tags            []string        `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	RewardInfo      string          `protobuf:"bytes,13,opt,name=reward_info,json=rewardInfo,proto3" json:"reward_info,omitempty"`
	LostFoundTime   string          `protobuf:"bytes,14,opt,name=lost_found_time,json=lostFoundTime,proto3" json:"lost_found_time,omitempty"`
	PublisherId     int64           `protobuf:"varint,15,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
	PublisherName   string          `protobuf:"bytes,16,opt,name=publisher_name,json=publisherName,proto3" json:"publisher_name,omitempty"`
	PublisherAvatar string          `protobuf:"bytes,17,opt,name=publisher_avatar,json=publisherAvatar,proto3" json:"publisher_avatar,omitempty"`
	ViewCount       int64           `protobuf:"varint,18,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
	LikeCount       int64           `protobuf:"varint,19,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	CommentCount    int64           `protobuf:"varint,20,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
	IsLiked         bool            `protobuf:"varint,21,opt,name=is_liked,json=isLiked,proto3" json:"is_liked,omitempty"`
	CreatedAt       string          `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string          `protobuf:"bytes,23,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LostFoundItem) Reset() {
	*x = LostFoundItem{}
	mi := &file_lostfound_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LostFoundItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LostFoundItem) ProtoMessage() {}

func (x *LostFoundItem) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LostFoundItem.ProtoReflect.Descriptor instead.
func (*LostFoundItem) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{0}
}

func (x *LostFoundItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LostFoundItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LostFoundItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LostFoundItem) GetType() LostFoundType {
	if x != nil {
		return x.Type
	}
	return LostFoundType_LOSTT
}

func (x *LostFoundItem) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *LostFoundItem) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *LostFoundItem) GetLocationDetail() map[string]string {
	if x != nil {
		return x.LocationDetail
	}
	return nil
}

func (x *LostFoundItem) GetContactInfo() string {
	if x != nil {
		return x.ContactInfo
	}
	return ""
}

func (x *LostFoundItem) GetContactWay() string {
	if x != nil {
		return x.ContactWay
	}
	return ""
}

func (x *LostFoundItem) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *LostFoundItem) GetStatus() LostFoundStatus {
	if x != nil {
		return x.Status
	}
	return LostFoundStatus_PENDING
}

func (x *LostFoundItem) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *LostFoundItem) GetRewardInfo() string {
	if x != nil {
		return x.RewardInfo
	}
	return ""
}

func (x *LostFoundItem) GetLostFoundTime() string {
	if x != nil {
		return x.LostFoundTime
	}
	return ""
}

func (x *LostFoundItem) GetPublisherId() int64 {
	if x != nil {
		return x.PublisherId
	}
	return 0
}

func (x *LostFoundItem) GetPublisherName() string {
	if x != nil {
		return x.PublisherName
	}
	return ""
}

func (x *LostFoundItem) GetPublisherAvatar() string {
	if x != nil {
		return x.PublisherAvatar
	}
	return ""
}

func (x *LostFoundItem) GetViewCount() int64 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *LostFoundItem) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *LostFoundItem) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *LostFoundItem) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

func (x *LostFoundItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *LostFoundItem) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 评论信息
type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName      string                 `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserAvatar    string                 `protobuf:"bytes,5,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_lostfound_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{1}
}

func (x *Comment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Comment) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Comment) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *Comment) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// 获取失物招领列表请求
type GetLostFoundListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`     // lost/found/all
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // pending/found/claimed/closed/all
	Sort          string                 `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`     // latest/hot
	Keywords      string                 `protobuf:"bytes,6,opt,name=keywords,proto3" json:"keywords,omitempty"`
	CategoryId    int64                  `protobuf:"varint,7,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	UserId        int64                  `protobuf:"varint,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 查询特定用户的发布
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLostFoundListRequest) Reset() {
	*x = GetLostFoundListRequest{}
	mi := &file_lostfound_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLostFoundListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLostFoundListRequest) ProtoMessage() {}

func (x *GetLostFoundListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLostFoundListRequest.ProtoReflect.Descriptor instead.
func (*GetLostFoundListRequest) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{2}
}

func (x *GetLostFoundListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLostFoundListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetLostFoundListRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetLostFoundListRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetLostFoundListRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetLostFoundListRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *GetLostFoundListRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetLostFoundListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取失物招领列表响应
type GetLostFoundListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*LostFoundItem       `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page          int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLostFoundListResponse) Reset() {
	*x = GetLostFoundListResponse{}
	mi := &file_lostfound_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLostFoundListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLostFoundListResponse) ProtoMessage() {}

func (x *GetLostFoundListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLostFoundListResponse.ProtoReflect.Descriptor instead.
func (*GetLostFoundListResponse) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{3}
}

func (x *GetLostFoundListResponse) GetList() []*LostFoundItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetLostFoundListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetLostFoundListResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLostFoundListResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 获取失物招领详情请求
type GetLostFoundDetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 当前用户ID，用于判断是否点赞
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLostFoundDetailRequest) Reset() {
	*x = GetLostFoundDetailRequest{}
	mi := &file_lostfound_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLostFoundDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLostFoundDetailRequest) ProtoMessage() {}

func (x *GetLostFoundDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLostFoundDetailRequest.ProtoReflect.Descriptor instead.
func (*GetLostFoundDetailRequest) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{4}
}

func (x *GetLostFoundDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLostFoundDetailRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取失物招领详情响应
type GetLostFoundDetailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *LostFoundItem         `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Comments      []*Comment             `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLostFoundDetailResponse) Reset() {
	*x = GetLostFoundDetailResponse{}
	mi := &file_lostfound_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLostFoundDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLostFoundDetailResponse) ProtoMessage() {}

func (x *GetLostFoundDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLostFoundDetailResponse.ProtoReflect.Descriptor instead.
func (*GetLostFoundDetailResponse) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{5}
}

func (x *GetLostFoundDetailResponse) GetItem() *LostFoundItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetLostFoundDetailResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

// 获取用户发布的失物招领请求
type GetUserLostFoundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserLostFoundRequest) Reset() {
	*x = GetUserLostFoundRequest{}
	mi := &file_lostfound_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserLostFoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLostFoundRequest) ProtoMessage() {}

func (x *GetUserLostFoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLostFoundRequest.ProtoReflect.Descriptor instead.
func (*GetUserLostFoundRequest) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserLostFoundRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserLostFoundRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserLostFoundRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 获取用户发布的失物招领响应
type GetUserLostFoundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*LostFoundItem       `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page          int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserLostFoundResponse) Reset() {
	*x = GetUserLostFoundResponse{}
	mi := &file_lostfound_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserLostFoundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLostFoundResponse) ProtoMessage() {}

func (x *GetUserLostFoundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLostFoundResponse.ProtoReflect.Descriptor instead.
func (*GetUserLostFoundResponse) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserLostFoundResponse) GetList() []*LostFoundItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetUserLostFoundResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetUserLostFoundResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserLostFoundResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 发布失物招领请求
type PublishLostFoundRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	UserId      int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// string type = 4; // lost 或 found
	Type           LostFoundType     `protobuf:"varint,4,opt,name=type,proto3,enum=lostfound.LostFoundType" json:"type,omitempty"` // lost 或 found
	Category       string            `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Location       string            `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	LocationDetail map[string]string `protobuf:"bytes,7,rep,name=location_detail,json=locationDetail,proto3" json:"location_detail,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ContactInfo    string            `protobuf:"bytes,8,opt,name=contact_info,json=contactInfo,proto3" json:"contact_info,omitempty"`
	ContactWay     string            `protobuf:"bytes,9,opt,name=contact_way,json=contactWay,proto3" json:"contact_way,omitempty"`
	Images         []string          `protobuf:"bytes,10,rep,name=images,proto3" json:"images,omitempty"`
	Tags           []string          `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	RewardInfo     string            `protobuf:"bytes,12,opt,name=reward_info,json=rewardInfo,proto3" json:"reward_info,omitempty"`
	LostFoundTime  string            `protobuf:"bytes,13,opt,name=lost_found_time,json=lostFoundTime,proto3" json:"lost_found_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PublishLostFoundRequest) Reset() {
	*x = PublishLostFoundRequest{}
	mi := &file_lostfound_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishLostFoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishLostFoundRequest) ProtoMessage() {}

func (x *PublishLostFoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishLostFoundRequest.ProtoReflect.Descriptor instead.
func (*PublishLostFoundRequest) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{8}
}

func (x *PublishLostFoundRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PublishLostFoundRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PublishLostFoundRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PublishLostFoundRequest) GetType() LostFoundType {
	if x != nil {
		return x.Type
	}
	return LostFoundType_LOSTT
}

func (x *PublishLostFoundRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PublishLostFoundRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *PublishLostFoundRequest) GetLocationDetail() map[string]string {
	if x != nil {
		return x.LocationDetail
	}
	return nil
}

func (x *PublishLostFoundRequest) GetContactInfo() string {
	if x != nil {
		return x.ContactInfo
	}
	return ""
}

func (x *PublishLostFoundRequest) GetContactWay() string {
	if x != nil {
		return x.ContactWay
	}
	return ""
}

func (x *PublishLostFoundRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *PublishLostFoundRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PublishLostFoundRequest) GetRewardInfo() string {
	if x != nil {
		return x.RewardInfo
	}
	return ""
}

func (x *PublishLostFoundRequest) GetLostFoundTime() string {
	if x != nil {
		return x.LostFoundTime
	}
	return ""
}

// 发布失物招领响应
type PublishLostFoundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishLostFoundResponse) Reset() {
	*x = PublishLostFoundResponse{}
	mi := &file_lostfound_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishLostFoundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishLostFoundResponse) ProtoMessage() {}

func (x *PublishLostFoundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishLostFoundResponse.ProtoReflect.Descriptor instead.
func (*PublishLostFoundResponse) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{9}
}

func (x *PublishLostFoundResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PublishLostFoundResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 更新失物招领请求
type UpdateLostFoundRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId         int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 当前操作用户ID，用于权限检查
	Title          string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description    string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Category       string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Location       string                 `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	LocationDetail map[string]string      `protobuf:"bytes,7,rep,name=location_detail,json=locationDetail,proto3" json:"location_detail,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ContactInfo    string                 `protobuf:"bytes,8,opt,name=contact_info,json=contactInfo,proto3" json:"contact_info,omitempty"`
	ContactWay     string                 `protobuf:"bytes,9,opt,name=contact_way,json=contactWay,proto3" json:"contact_way,omitempty"`
	Images         []string               `protobuf:"bytes,10,rep,name=images,proto3" json:"images,omitempty"`
	Tags           []string               `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	RewardInfo     string                 `protobuf:"bytes,12,opt,name=reward_info,json=rewardInfo,proto3" json:"reward_info,omitempty"`
	LostFoundTime  string                 `protobuf:"bytes,13,opt,name=lost_found_time,json=lostFoundTime,proto3" json:"lost_found_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateLostFoundRequest) Reset() {
	*x = UpdateLostFoundRequest{}
	mi := &file_lostfound_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLostFoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLostFoundRequest) ProtoMessage() {}

func (x *UpdateLostFoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLostFoundRequest.ProtoReflect.Descriptor instead.
func (*UpdateLostFoundRequest) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateLostFoundRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateLostFoundRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateLostFoundRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateLostFoundRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateLostFoundRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UpdateLostFoundRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UpdateLostFoundRequest) GetLocationDetail() map[string]string {
	if x != nil {
		return x.LocationDetail
	}
	return nil
}

func (x *UpdateLostFoundRequest) GetContactInfo() string {
	if x != nil {
		return x.ContactInfo
	}
	return ""
}

func (x *UpdateLostFoundRequest) GetContactWay() string {
	if x != nil {
		return x.ContactWay
	}
	return ""
}

func (x *UpdateLostFoundRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *UpdateLostFoundRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateLostFoundRequest) GetRewardInfo() string {
	if x != nil {
		return x.RewardInfo
	}
	return ""
}

func (x *UpdateLostFoundRequest) GetLostFoundTime() string {
	if x != nil {
		return x.LostFoundTime
	}
	return ""
}

// 更新失物招领响应
type UpdateLostFoundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLostFoundResponse) Reset() {
	*x = UpdateLostFoundResponse{}
	mi := &file_lostfound_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLostFoundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLostFoundResponse) ProtoMessage() {}

func (x *UpdateLostFoundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLostFoundResponse.ProtoReflect.Descriptor instead.
func (*UpdateLostFoundResponse) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateLostFoundResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 删除失物招领请求
type DeleteLostFoundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 当前操作用户ID，用于权限检查
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLostFoundRequest) Reset() {
	*x = DeleteLostFoundRequest{}
	mi := &file_lostfound_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLostFoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLostFoundRequest) ProtoMessage() {}

func (x *DeleteLostFoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLostFoundRequest.ProtoReflect.Descriptor instead.
func (*DeleteLostFoundRequest) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteLostFoundRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteLostFoundRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 删除失物招领响应
type DeleteLostFoundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLostFoundResponse) Reset() {
	*x = DeleteLostFoundResponse{}
	mi := &file_lostfound_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLostFoundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLostFoundResponse) ProtoMessage() {}

func (x *DeleteLostFoundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLostFoundResponse.ProtoReflect.Descriptor instead.
func (*DeleteLostFoundResponse) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteLostFoundResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 更新失物招领状态请求
type UpdateLostFoundStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 当前操作用户ID，用于权限检查
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                // pending, found, claimed, closed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLostFoundStatusRequest) Reset() {
	*x = UpdateLostFoundStatusRequest{}
	mi := &file_lostfound_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLostFoundStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLostFoundStatusRequest) ProtoMessage() {}

func (x *UpdateLostFoundStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLostFoundStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateLostFoundStatusRequest) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateLostFoundStatusRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateLostFoundStatusRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateLostFoundStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 更新失物招领状态响应
type UpdateLostFoundStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLostFoundStatusResponse) Reset() {
	*x = UpdateLostFoundStatusResponse{}
	mi := &file_lostfound_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLostFoundStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLostFoundStatusResponse) ProtoMessage() {}

func (x *UpdateLostFoundStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLostFoundStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateLostFoundStatusResponse) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateLostFoundStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论失物招领请求
type CommentLostFoundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentLostFoundRequest) Reset() {
	*x = CommentLostFoundRequest{}
	mi := &file_lostfound_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentLostFoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentLostFoundRequest) ProtoMessage() {}

func (x *CommentLostFoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentLostFoundRequest.ProtoReflect.Descriptor instead.
func (*CommentLostFoundRequest) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{16}
}

func (x *CommentLostFoundRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentLostFoundRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentLostFoundRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 评论失物招领响应
type CommentLostFoundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int64                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentLostFoundResponse) Reset() {
	*x = CommentLostFoundResponse{}
	mi := &file_lostfound_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentLostFoundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentLostFoundResponse) ProtoMessage() {}

func (x *CommentLostFoundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentLostFoundResponse.ProtoReflect.Descriptor instead.
func (*CommentLostFoundResponse) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{17}
}

func (x *CommentLostFoundResponse) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentLostFoundResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取失物招领评论请求
type GetLostFoundCommentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Page          int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLostFoundCommentsRequest) Reset() {
	*x = GetLostFoundCommentsRequest{}
	mi := &file_lostfound_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLostFoundCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLostFoundCommentsRequest) ProtoMessage() {}

func (x *GetLostFoundCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLostFoundCommentsRequest.ProtoReflect.Descriptor instead.
func (*GetLostFoundCommentsRequest) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{18}
}

func (x *GetLostFoundCommentsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLostFoundCommentsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLostFoundCommentsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 获取失物招领评论响应
type GetLostFoundCommentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page          int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLostFoundCommentsResponse) Reset() {
	*x = GetLostFoundCommentsResponse{}
	mi := &file_lostfound_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLostFoundCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLostFoundCommentsResponse) ProtoMessage() {}

func (x *GetLostFoundCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLostFoundCommentsResponse.ProtoReflect.Descriptor instead.
func (*GetLostFoundCommentsResponse) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{19}
}

func (x *GetLostFoundCommentsResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetLostFoundCommentsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetLostFoundCommentsResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLostFoundCommentsResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 点赞失物招领请求
type LikeLostFoundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeLostFoundRequest) Reset() {
	*x = LikeLostFoundRequest{}
	mi := &file_lostfound_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeLostFoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeLostFoundRequest) ProtoMessage() {}

func (x *LikeLostFoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeLostFoundRequest.ProtoReflect.Descriptor instead.
func (*LikeLostFoundRequest) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{20}
}

func (x *LikeLostFoundRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LikeLostFoundRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 点赞失物招领响应
type LikeLostFoundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeLostFoundResponse) Reset() {
	*x = LikeLostFoundResponse{}
	mi := &file_lostfound_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeLostFoundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeLostFoundResponse) ProtoMessage() {}

func (x *LikeLostFoundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeLostFoundResponse.ProtoReflect.Descriptor instead.
func (*LikeLostFoundResponse) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{21}
}

func (x *LikeLostFoundResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 取消点赞失物招领请求
type UnlikeLostFoundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeLostFoundRequest) Reset() {
	*x = UnlikeLostFoundRequest{}
	mi := &file_lostfound_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeLostFoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeLostFoundRequest) ProtoMessage() {}

func (x *UnlikeLostFoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeLostFoundRequest.ProtoReflect.Descriptor instead.
func (*UnlikeLostFoundRequest) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{22}
}

func (x *UnlikeLostFoundRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UnlikeLostFoundRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 取消点赞失物招领响应
type UnlikeLostFoundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeLostFoundResponse) Reset() {
	*x = UnlikeLostFoundResponse{}
	mi := &file_lostfound_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeLostFoundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeLostFoundResponse) ProtoMessage() {}

func (x *UnlikeLostFoundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostfound_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeLostFoundResponse.ProtoReflect.Descriptor instead.
func (*UnlikeLostFoundResponse) Descriptor() ([]byte, []int) {
	return file_lostfound_proto_rawDescGZIP(), []int{23}
}

func (x *UnlikeLostFoundResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_lostfound_proto protoreflect.FileDescriptor

var file_lostfound_proto_rawDesc = string([]byte{
	0x0a, 0x0f, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0xf5, 0x06, 0x0a,
	0x0d, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x0f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4c, 0x6f, 0x73, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x73, 0x74,
	0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c,
	0x69, 0x6b, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x69,
	0x6b, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x1a, 0x41, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xa9, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xd9, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x2e, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x44, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7a, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x73, 0x74,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x6f,
	0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x5c, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4c,
	0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0xad, 0x04, 0x0a, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x6f,
	0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x73, 0x74, 0x5f,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0x41, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x44, 0x0a, 0x18, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x6f, 0x73,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8d, 0x04, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x0f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x57, 0x61, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a,
	0x0f, 0x6c, 0x6f, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x41, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x33, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5f, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x39, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x5c, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x73, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x53, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x8e, 0x01,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x3f,
	0x0a, 0x14, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x31, 0x0a, 0x15, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x41, 0x0a, 0x16, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x73, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x17, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x4c,
	0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x26, 0x0a, 0x0d, 0x4c, 0x6f,
	0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4c,
	0x4f, 0x53, 0x54, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x54,
	0x10, 0x01, 0x2a, 0x42, 0x0a, 0x0f, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c,
	0x4f, 0x53, 0x45, 0x44, 0x10, 0x03, 0x32, 0xa0, 0x08, 0x0a, 0x10, 0x4c, 0x6f, 0x73, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x22, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24,
	0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x22, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x22, 0x2e, 0x6c,
	0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x21, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x6f,
	0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x21, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x27, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6c, 0x6f,
	0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x22, 0x2e, 0x6c, 0x6f, 0x73, 0x74,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x73,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x6c, 0x6f, 0x73,
	0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x4c,
	0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1f, 0x2e, 0x6c,
	0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x73,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x6f,
	0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x0f, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x21, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x55,
	0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x4c, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x6c,
	0x6f, 0x73, 0x74, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_lostfound_proto_rawDescOnce sync.Once
	file_lostfound_proto_rawDescData []byte
)

func file_lostfound_proto_rawDescGZIP() []byte {
	file_lostfound_proto_rawDescOnce.Do(func() {
		file_lostfound_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lostfound_proto_rawDesc), len(file_lostfound_proto_rawDesc)))
	})
	return file_lostfound_proto_rawDescData
}

var file_lostfound_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_lostfound_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_lostfound_proto_goTypes = []any{
	(LostFoundType)(0),                    // 0: lostfound.LostFoundType
	(LostFoundStatus)(0),                  // 1: lostfound.LostFoundStatus
	(*LostFoundItem)(nil),                 // 2: lostfound.LostFoundItem
	(*Comment)(nil),                       // 3: lostfound.Comment
	(*GetLostFoundListRequest)(nil),       // 4: lostfound.GetLostFoundListRequest
	(*GetLostFoundListResponse)(nil),      // 5: lostfound.GetLostFoundListResponse
	(*GetLostFoundDetailRequest)(nil),     // 6: lostfound.GetLostFoundDetailRequest
	(*GetLostFoundDetailResponse)(nil),    // 7: lostfound.GetLostFoundDetailResponse
	(*GetUserLostFoundRequest)(nil),       // 8: lostfound.GetUserLostFoundRequest
	(*GetUserLostFoundResponse)(nil),      // 9: lostfound.GetUserLostFoundResponse
	(*PublishLostFoundRequest)(nil),       // 10: lostfound.PublishLostFoundRequest
	(*PublishLostFoundResponse)(nil),      // 11: lostfound.PublishLostFoundResponse
	(*UpdateLostFoundRequest)(nil),        // 12: lostfound.UpdateLostFoundRequest
	(*UpdateLostFoundResponse)(nil),       // 13: lostfound.UpdateLostFoundResponse
	(*DeleteLostFoundRequest)(nil),        // 14: lostfound.DeleteLostFoundRequest
	(*DeleteLostFoundResponse)(nil),       // 15: lostfound.DeleteLostFoundResponse
	(*UpdateLostFoundStatusRequest)(nil),  // 16: lostfound.UpdateLostFoundStatusRequest
	(*UpdateLostFoundStatusResponse)(nil), // 17: lostfound.UpdateLostFoundStatusResponse
	(*CommentLostFoundRequest)(nil),       // 18: lostfound.CommentLostFoundRequest
	(*CommentLostFoundResponse)(nil),      // 19: lostfound.CommentLostFoundResponse
	(*GetLostFoundCommentsRequest)(nil),   // 20: lostfound.GetLostFoundCommentsRequest
	(*GetLostFoundCommentsResponse)(nil),  // 21: lostfound.GetLostFoundCommentsResponse
	(*LikeLostFoundRequest)(nil),          // 22: lostfound.LikeLostFoundRequest
	(*LikeLostFoundResponse)(nil),         // 23: lostfound.LikeLostFoundResponse
	(*UnlikeLostFoundRequest)(nil),        // 24: lostfound.UnlikeLostFoundRequest
	(*UnlikeLostFoundResponse)(nil),       // 25: lostfound.UnlikeLostFoundResponse
	nil,                                   // 26: lostfound.LostFoundItem.LocationDetailEntry
	nil,                                   // 27: lostfound.PublishLostFoundRequest.LocationDetailEntry
	nil,                                   // 28: lostfound.UpdateLostFoundRequest.LocationDetailEntry
}
var file_lostfound_proto_depIdxs = []int32{
	0,  // 0: lostfound.LostFoundItem.type:type_name -> lostfound.LostFoundType
	26, // 1: lostfound.LostFoundItem.location_detail:type_name -> lostfound.LostFoundItem.LocationDetailEntry
	1,  // 2: lostfound.LostFoundItem.status:type_name -> lostfound.LostFoundStatus
	2,  // 3: lostfound.GetLostFoundListResponse.list:type_name -> lostfound.LostFoundItem
	2,  // 4: lostfound.GetLostFoundDetailResponse.item:type_name -> lostfound.LostFoundItem
	3,  // 5: lostfound.GetLostFoundDetailResponse.comments:type_name -> lostfound.Comment
	2,  // 6: lostfound.GetUserLostFoundResponse.list:type_name -> lostfound.LostFoundItem
	0,  // 7: lostfound.PublishLostFoundRequest.type:type_name -> lostfound.LostFoundType
	27, // 8: lostfound.PublishLostFoundRequest.location_detail:type_name -> lostfound.PublishLostFoundRequest.LocationDetailEntry
	28, // 9: lostfound.UpdateLostFoundRequest.location_detail:type_name -> lostfound.UpdateLostFoundRequest.LocationDetailEntry
	3,  // 10: lostfound.GetLostFoundCommentsResponse.comments:type_name -> lostfound.Comment
	4,  // 11: lostfound.LostFoundService.GetLostFoundList:input_type -> lostfound.GetLostFoundListRequest
	6,  // 12: lostfound.LostFoundService.GetLostFoundDetail:input_type -> lostfound.GetLostFoundDetailRequest
	8,  // 13: lostfound.LostFoundService.GetUserLostFound:input_type -> lostfound.GetUserLostFoundRequest
	10, // 14: lostfound.LostFoundService.PublishLostFound:input_type -> lostfound.PublishLostFoundRequest
	12, // 15: lostfound.LostFoundService.UpdateLostFound:input_type -> lostfound.UpdateLostFoundRequest
	14, // 16: lostfound.LostFoundService.DeleteLostFound:input_type -> lostfound.DeleteLostFoundRequest
	16, // 17: lostfound.LostFoundService.UpdateLostFoundStatus:input_type -> lostfound.UpdateLostFoundStatusRequest
	18, // 18: lostfound.LostFoundService.CommentLostFound:input_type -> lostfound.CommentLostFoundRequest
	20, // 19: lostfound.LostFoundService.GetLostFoundComments:input_type -> lostfound.GetLostFoundCommentsRequest
	22, // 20: lostfound.LostFoundService.LikeLostFound:input_type -> lostfound.LikeLostFoundRequest
	24, // 21: lostfound.LostFoundService.UnlikeLostFound:input_type -> lostfound.UnlikeLostFoundRequest
	5,  // 22: lostfound.LostFoundService.GetLostFoundList:output_type -> lostfound.GetLostFoundListResponse
	7,  // 23: lostfound.LostFoundService.GetLostFoundDetail:output_type -> lostfound.GetLostFoundDetailResponse
	9,  // 24: lostfound.LostFoundService.GetUserLostFound:output_type -> lostfound.GetUserLostFoundResponse
	11, // 25: lostfound.LostFoundService.PublishLostFound:output_type -> lostfound.PublishLostFoundResponse
	13, // 26: lostfound.LostFoundService.UpdateLostFound:output_type -> lostfound.UpdateLostFoundResponse
	15, // 27: lostfound.LostFoundService.DeleteLostFound:output_type -> lostfound.DeleteLostFoundResponse
	17, // 28: lostfound.LostFoundService.UpdateLostFoundStatus:output_type -> lostfound.UpdateLostFoundStatusResponse
	19, // 29: lostfound.LostFoundService.CommentLostFound:output_type -> lostfound.CommentLostFoundResponse
	21, // 30: lostfound.LostFoundService.GetLostFoundComments:output_type -> lostfound.GetLostFoundCommentsResponse
	23, // 31: lostfound.LostFoundService.LikeLostFound:output_type -> lostfound.LikeLostFoundResponse
	25, // 32: lostfound.LostFoundService.UnlikeLostFound:output_type -> lostfound.UnlikeLostFoundResponse
	22, // [22:33] is the sub-list for method output_type
	11, // [11:22] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_lostfound_proto_init() }
func file_lostfound_proto_init() {
	if File_lostfound_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lostfound_proto_rawDesc), len(file_lostfound_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lostfound_proto_goTypes,
		DependencyIndexes: file_lostfound_proto_depIdxs,
		EnumInfos:         file_lostfound_proto_enumTypes,
		MessageInfos:      file_lostfound_proto_msgTypes,
	}.Build()
	File_lostfound_proto = out.File
	file_lostfound_proto_goTypes = nil
	file_lostfound_proto_depIdxs = nil
}
