// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: product.proto

package productservice

import (
	"context"

	"github.com/liumkssq/goapp/app/product/rpc/product"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Category                     = product.Category
	Comment                      = product.Comment
	CommentProductRequest        = product.CommentProductRequest
	CommentProductResponse       = product.CommentProductResponse
	DeleteProductRequest         = product.DeleteProductRequest
	DeleteProductResponse        = product.DeleteProductResponse
	FavoriteProductRequest       = product.FavoriteProductRequest
	FavoriteProductResponse      = product.FavoriteProductResponse
	GetFavoriteProductsRequest   = product.GetFavoriteProductsRequest
	GetFavoriteProductsResponse  = product.GetFavoriteProductsResponse
	GetProductCategoriesRequest  = product.GetProductCategoriesRequest
	GetProductCategoriesResponse = product.GetProductCategoriesResponse
	GetProductCommentsRequest    = product.GetProductCommentsRequest
	GetProductCommentsResponse   = product.GetProductCommentsResponse
	GetProductDetailRequest      = product.GetProductDetailRequest
	GetProductDetailResponse     = product.GetProductDetailResponse
	GetProductListRequest        = product.GetProductListRequest
	GetProductListResponse       = product.GetProductListResponse
	GetUserProductsRequest       = product.GetUserProductsRequest
	GetUserProductsResponse      = product.GetUserProductsResponse
	Product                      = product.Product
	PublishProductRequest        = product.PublishProductRequest
	PublishProductResponse       = product.PublishProductResponse
	ReportProductRequest         = product.ReportProductRequest
	ReportProductResponse        = product.ReportProductResponse
	UpdateProductRequest         = product.UpdateProductRequest
	UpdateProductResponse        = product.UpdateProductResponse

	ProductService interface {
		// 获取商品列表
		GetProductList(ctx context.Context, in *GetProductListRequest, opts ...grpc.CallOption) (*GetProductListResponse, error)
		// 获取商品详情
		GetProductDetail(ctx context.Context, in *GetProductDetailRequest, opts ...grpc.CallOption) (*GetProductDetailResponse, error)
		// 获取商品分类
		GetProductCategories(ctx context.Context, in *GetProductCategoriesRequest, opts ...grpc.CallOption) (*GetProductCategoriesResponse, error)
		// 发布商品
		PublishProduct(ctx context.Context, in *PublishProductRequest, opts ...grpc.CallOption) (*PublishProductResponse, error)
		// 更新商品
		UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error)
		// 删除商品
		DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*DeleteProductResponse, error)
		// 获取用户的商品
		GetUserProducts(ctx context.Context, in *GetUserProductsRequest, opts ...grpc.CallOption) (*GetUserProductsResponse, error)
		// 收藏/取消收藏商品
		FavoriteProduct(ctx context.Context, in *FavoriteProductRequest, opts ...grpc.CallOption) (*FavoriteProductResponse, error)
		// 获取收藏的商品
		GetFavoriteProducts(ctx context.Context, in *GetFavoriteProductsRequest, opts ...grpc.CallOption) (*GetFavoriteProductsResponse, error)
		// 举报商品
		ReportProduct(ctx context.Context, in *ReportProductRequest, opts ...grpc.CallOption) (*ReportProductResponse, error)
		// 评论商品
		CommentProduct(ctx context.Context, in *CommentProductRequest, opts ...grpc.CallOption) (*CommentProductResponse, error)
		// 获取商品评论
		GetProductComments(ctx context.Context, in *GetProductCommentsRequest, opts ...grpc.CallOption) (*GetProductCommentsResponse, error)
	}

	defaultProductService struct {
		cli zrpc.Client
	}
)

func NewProductService(cli zrpc.Client) ProductService {
	return &defaultProductService{
		cli: cli,
	}
}

// 获取商品列表
func (m *defaultProductService) GetProductList(ctx context.Context, in *GetProductListRequest, opts ...grpc.CallOption) (*GetProductListResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.GetProductList(ctx, in, opts...)
}

// 获取商品详情
func (m *defaultProductService) GetProductDetail(ctx context.Context, in *GetProductDetailRequest, opts ...grpc.CallOption) (*GetProductDetailResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.GetProductDetail(ctx, in, opts...)
}

// 获取商品分类
func (m *defaultProductService) GetProductCategories(ctx context.Context, in *GetProductCategoriesRequest, opts ...grpc.CallOption) (*GetProductCategoriesResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.GetProductCategories(ctx, in, opts...)
}

// 发布商品
func (m *defaultProductService) PublishProduct(ctx context.Context, in *PublishProductRequest, opts ...grpc.CallOption) (*PublishProductResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.PublishProduct(ctx, in, opts...)
}

// 更新商品
func (m *defaultProductService) UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.UpdateProduct(ctx, in, opts...)
}

// 删除商品
func (m *defaultProductService) DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*DeleteProductResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.DeleteProduct(ctx, in, opts...)
}

// 获取用户的商品
func (m *defaultProductService) GetUserProducts(ctx context.Context, in *GetUserProductsRequest, opts ...grpc.CallOption) (*GetUserProductsResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.GetUserProducts(ctx, in, opts...)
}

// 收藏/取消收藏商品
func (m *defaultProductService) FavoriteProduct(ctx context.Context, in *FavoriteProductRequest, opts ...grpc.CallOption) (*FavoriteProductResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.FavoriteProduct(ctx, in, opts...)
}

// 获取收藏的商品
func (m *defaultProductService) GetFavoriteProducts(ctx context.Context, in *GetFavoriteProductsRequest, opts ...grpc.CallOption) (*GetFavoriteProductsResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.GetFavoriteProducts(ctx, in, opts...)
}

// 举报商品
func (m *defaultProductService) ReportProduct(ctx context.Context, in *ReportProductRequest, opts ...grpc.CallOption) (*ReportProductResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.ReportProduct(ctx, in, opts...)
}

// 评论商品
func (m *defaultProductService) CommentProduct(ctx context.Context, in *CommentProductRequest, opts ...grpc.CallOption) (*CommentProductResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.CommentProduct(ctx, in, opts...)
}

// 获取商品评论
func (m *defaultProductService) GetProductComments(ctx context.Context, in *GetProductCommentsRequest, opts ...grpc.CallOption) (*GetProductCommentsResponse, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.GetProductComments(ctx, in, opts...)
}
