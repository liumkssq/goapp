// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: search.proto

package server

import (
	"context"

	"github.com/liumkssq/goapp/app/search/rpc/internal/logic"
	"github.com/liumkssq/goapp/app/search/rpc/internal/svc"
	"github.com/liumkssq/goapp/app/search/rpc/search"
)

type SearchServiceServer struct {
	svcCtx *svc.ServiceContext
	search.UnimplementedSearchServiceServer
}

func NewSearchServiceServer(svcCtx *svc.ServiceContext) *SearchServiceServer {
	return &SearchServiceServer{
		svcCtx: svcCtx,
	}
}

// 全局搜索
func (s *SearchServiceServer) GlobalSearch(ctx context.Context, in *search.GlobalSearchRequest) (*search.GlobalSearchResponse, error) {
	l := logic.NewGlobalSearchLogic(ctx, s.svcCtx)
	return l.GlobalSearch(in)
}

// 搜索商品
func (s *SearchServiceServer) SearchProducts(ctx context.Context, in *search.SearchProductsRequest) (*search.SearchProductsResponse, error) {
	l := logic.NewSearchProductsLogic(ctx, s.svcCtx)
	return l.SearchProducts(in)
}

// 搜索文章
func (s *SearchServiceServer) SearchArticles(ctx context.Context, in *search.SearchArticlesRequest) (*search.SearchArticlesResponse, error) {
	l := logic.NewSearchArticlesLogic(ctx, s.svcCtx)
	return l.SearchArticles(in)
}

// 搜索失物招领
func (s *SearchServiceServer) SearchLostFound(ctx context.Context, in *search.SearchLostFoundRequest) (*search.SearchLostFoundResponse, error) {
	l := logic.NewSearchLostFoundLogic(ctx, s.svcCtx)
	return l.SearchLostFound(in)
}

// 搜索用户
func (s *SearchServiceServer) SearchUsers(ctx context.Context, in *search.SearchUsersRequest) (*search.SearchUsersResponse, error) {
	l := logic.NewSearchUsersLogic(ctx, s.svcCtx)
	return l.SearchUsers(in)
}

// 获取搜索历史
func (s *SearchServiceServer) GetSearchHistory(ctx context.Context, in *search.GetSearchHistoryRequest) (*search.GetSearchHistoryResponse, error) {
	l := logic.NewGetSearchHistoryLogic(ctx, s.svcCtx)
	return l.GetSearchHistory(in)
}

// 清除搜索历史
func (s *SearchServiceServer) ClearSearchHistory(ctx context.Context, in *search.ClearSearchHistoryRequest) (*search.ClearSearchHistoryResponse, error) {
	l := logic.NewClearSearchHistoryLogic(ctx, s.svcCtx)
	return l.ClearSearchHistory(in)
}

// 获取热门搜索关键词
func (s *SearchServiceServer) GetHotSearchKeywords(ctx context.Context, in *search.GetHotSearchKeywordsRequest) (*search.GetHotSearchKeywordsResponse, error) {
	l := logic.NewGetHotSearchKeywordsLogic(ctx, s.svcCtx)
	return l.GetHotSearchKeywords(in)
}
