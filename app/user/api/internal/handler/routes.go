// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1

package handler

import (
	"net/http"

	"github.com/liumkssq/goapp/app/user/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 自动登录（仅用于开发环境测试）
				Method:  http.MethodPost,
				Path:    "/login/auto",
				Handler: AutoLoginHandler(serverCtx),
			},
			{
				// 账号密码登录
				Method:  http.MethodPost,
				Path:    "/login/password",
				Handler: LoginByPasswordHandler(serverCtx),
			},
			{
				// 验证码登录
				Method:  http.MethodPost,
				Path:    "/login/sms-code",
				Handler: LoginByVerificationCodeHandler(serverCtx),
			},
			{
				// 用户注册
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: RegisterHandler(serverCtx),
			},
			{
				// 重置密码
				Method:  http.MethodPost,
				Path:    "/reset-password",
				Handler: ResetPasswordHandler(serverCtx),
			},
			{
				// 发送验证码
				Method:  http.MethodPost,
				Path:    "/send-code",
				Handler: SendVerificationCodeHandler(serverCtx),
			},
			{
				// 验证验证码
				Method:  http.MethodPost,
				Path:    "/verify-code",
				Handler: VerifyCodeHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 关注用户
				Method:  http.MethodPost,
				Path:    "/follow/:id",
				Handler: FollowUserHandler(serverCtx),
			},
			{
				// 获取当前用户信息
				Method:  http.MethodGet,
				Path:    "/info",
				Handler: GetUserInfoHandler(serverCtx),
			},
			{
				// 更新用户信息
				Method:  http.MethodPut,
				Path:    "/info",
				Handler: UpdateUserInfoHandler(serverCtx),
			},
			{
				// 退出登录
				Method:  http.MethodPost,
				Path:    "/logout",
				Handler: LogoutHandler(serverCtx),
			},
			{
				// 获取通知
				Method:  http.MethodGet,
				Path:    "/notifications",
				Handler: GetNotificationsHandler(serverCtx),
			},
			{
				// 标记通知为已读
				Method:  http.MethodPut,
				Path:    "/notifications/:id/read",
				Handler: MarkNotificationAsReadHandler(serverCtx),
			},
			{
				// 修改密码
				Method:  http.MethodPut,
				Path:    "/password",
				Handler: ChangePasswordHandler(serverCtx),
			},
			{
				// 获取用户详细资料
				Method:  http.MethodGet,
				Path:    "/profile/:id",
				Handler: GetUserProfileHandler(serverCtx),
			},
			{
				// 取消关注用户
				Method:  http.MethodPost,
				Path:    "/unfollow/:id",
				Handler: UnfollowUserHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/user"),
	)
}
