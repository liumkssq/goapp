// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1

package types

type ChangePasswordReq struct {
	OldPassword string `json:"oldPassword"` // 旧密码
	NewPassword string `json:"newPassword"` // 新密码
}

type ChangePasswordResp struct {
	Success bool `json:"success"` // 是否成功
}

type FollowUserReq struct {
	Id int64 `path:"id"` // 要关注的用户ID
}

type FollowUserResp struct {
	Success bool `json:"success"` // 是否成功
}

type LoginByPasswordReq struct {
	Username string `json:"username"` // 用户名/邮箱
	Password string `json:"password"` // 密码
}

type LoginByVerificationCodeReq struct {
	Phone            string `json:"phone"`            // 手机号
	VerificationCode string `json:"verificationCode"` // 验证码
}

type LoginResp struct {
	UserId       int64  `json:"userId"`       // 用户ID
	Username     string `json:"username"`     // 用户名
	Nickname     string `json:"nickname"`     // 昵称
	Avatar       string `json:"avatar"`       // 头像URL
	Phone        string `json:"phone"`        // 手机号
	AccessToken  string `json:"accessToken"`  // 访问令牌
	AccessExpire int64  `json:"accessExpire"` // 令牌过期时间
	RefreshAfter int64  `json:"refreshAfter"` // 刷新令牌时间
}

type MarkNotificationAsReadReq struct {
	Id int64 `path:"id"` // 通知ID
}

type MarkNotificationAsReadResp struct {
	Success bool `json:"success"` // 是否成功
}

type Notification struct {
	Id                 int64  `json:"id"`                          // 通知ID
	Type               string `json:"type"`                        // 通知类型
	Content            string `json:"content"`                     // 通知内容
	IsRead             bool   `json:"isRead"`                      // 是否已读
	CreatedAt          string `json:"createdAt"`                   // 创建时间
	RelatedUserId      int64  `json:"relatedUserId,optional"`      // 相关用户ID
	RelatedContentId   int64  `json:"relatedContentId,optional"`   // 相关内容ID
	RelatedContentType string `json:"relatedContentType,optional"` // 相关内容类型
}

type NotificationListResp struct {
	Total int            `json:"total"` // 总数
	List  []Notification `json:"list"`  // 通知列表
}

type RegisterReq struct {
	Username         string `json:"username"`         // 用户名
	Password         string `json:"password"`         // 密码
	Phone            string `json:"phone"`            // 手机号
	VerificationCode string `json:"verificationCode"` // 验证码
	Campus           string `json:"campus,optional"` // 校区
	College          string `json:"college,optional"` // 学院/部门
	Major            string `json:"major,optional"` // 专业
	EnrollmentYear   int    `json:"enrollmentYear,optional"` // 入学年份
	UserRole         string `json:"userRole,optional"` // 用户角色
	StudentId        string `json:"studentId,optional"` // 学号
}

type RegisterResp struct {
	UserId       int64  `json:"userId"`       // 用户ID
	Username     string `json:"username"`     // 用户名
	AccessToken  string `json:"accessToken"`  // 访问令牌
	AccessExpire int64  `json:"accessExpire"` // 令牌过期时间
	RefreshAfter int64  `json:"refreshAfter"` // 刷新令牌时间
}

type ResetPasswordReq struct {
	Phone            string `json:"phone"`            // 手机号
	VerificationCode string `json:"verificationCode"` // 验证码
	NewPassword      string `json:"newPassword"`      // 新密码
}

type ResetPasswordResp struct {
	Success bool `json:"success"` // 是否成功
}

type SendVerificationCodeReq struct {
	Phone string `json:"phone"` // 手机号
	Type  string `json:"type"`  // 验证码类型: login, register, reset_password
}

type SendVerificationCodeResp struct {
	Success bool `json:"success"` // 是否成功
}

type UnfollowUserReq struct {
	Id int64 `path:"id"` // 要取消关注的用户ID
}

type UnfollowUserResp struct {
	Success bool `json:"success"` // 是否成功
}

type UpdateUserInfoReq struct {
	Nickname string `json:"nickname,optional"` // 昵称
	Gender   string `json:"gender,optional"`   // 性别
	Bio      string `json:"bio,optional"`      // 个人简介
}

type UpdateUserInfoResp struct {
	Success bool `json:"success"` // 是否成功
}

type UserInfoResp struct {
	UserId         int64  `json:"userId"`          // 用户ID
	Username       string `json:"username"`        // 用户名
	Nickname       string `json:"nickname"`        // 昵称
	Avatar         string `json:"avatar"`          // 头像URL
	Phone          string `json:"phone"`           // 手机号
	Gender         string `json:"gender,optional"` // 性别
	Bio            string `json:"bio,optional"`    // 个人简介
	FollowingCount int    `json:"followingCount"`  // 关注数
	FollowersCount int    `json:"followersCount"`  // 粉丝数
	ProductCount   int    `json:"productCount"`    // 发布的商品数
	ArticleCount   int    `json:"articleCount"`    // 发布的文章数
	LostFoundCount int    `json:"lostFoundCount"`  // 发布的失物招领数
	CreatedAt      string `json:"createdAt"`       // 创建时间
}

type UserProfileReq struct {
	Id int64 `path:"id"` // 用户ID
}

type UserProfileResp struct {
	UserId         int64  `json:"userId"`          // 用户ID
	Username       string `json:"username"`        // 用户名
	Nickname       string `json:"nickname"`        // 昵称
	Avatar         string `json:"avatar"`          // 头像URL
	Gender         string `json:"gender,optional"` // 性别
	Bio            string `json:"bio,optional"`    // 个人简介
	FollowingCount int    `json:"followingCount"`  // 关注数
	FollowersCount int    `json:"followersCount"`  // 粉丝数
	IsFollowing    bool   `json:"isFollowing"`     // 当前用户是否关注了该用户
	ProductCount   int    `json:"productCount"`    // 发布的商品数
	ArticleCount   int    `json:"articleCount"`    // 发布的文章数
	LostFoundCount int    `json:"lostFoundCount"`  // 发布的失物招领数
	CreatedAt      string `json:"createdAt"`       // 创建时间
}

type VerifyCodeReq struct {
	Phone            string `json:"phone"`            // 手机号
	VerificationCode string `json:"verificationCode"` // 验证码
	Type             string `json:"type"`             // 验证类型
}

type VerifyCodeResp struct {
	Success bool   `json:"success"`          // 是否成功
	Message string `json:"message,optional"` // 消息
}
