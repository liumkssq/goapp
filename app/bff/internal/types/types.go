// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1

package types

type Category struct {
	Id       int64  `json:"id"`
	Name     string `json:"name"`
	Icon     string `json:"icon,optional"`
	ParentId int64  `json:"parentId,optional"`
	Level    int    `json:"level"`
	Sort     int    `json:"sort,optional"`
}

type ChangePasswordReq struct {
	OldPassword string `json:"oldPassword"` // 旧密码
	NewPassword string `json:"newPassword"` // 新密码
}

type ChangePasswordResp struct {
	Success bool `json:"success"` // 是否成功
}

type Comment struct {
	Id         int64  `json:"id"`
	Content    string `json:"content"`
	UserId     int64  `json:"userId"`
	UserName   string `json:"userName"`
	UserAvatar string `json:"userAvatar,optional"`
	CreatedAt  string `json:"createdAt"`
}

type CommentLostFoundReq struct {
	Id      int64  `path:"id"`
	Content string `json:"content"`
}

type CommentLostFoundResp struct {
	CommentId int64  `json:"commentId"`
	Message   string `json:"message"`
}

type CommentProductReq struct {
	Id      int64  `path:"id"`
	Content string `json:"content"`
}

type CommentProductResp struct {
	CommentId int64  `json:"commentId"`
	Message   string `json:"message"`
}

type CommonResp struct {
	Message string `json:"message"`
}

type DeleteLostFoundReq struct {
	Id int64 `path:"id"`
}

type DeleteLostFoundResp struct {
	Message string `json:"message"`
}

type DeleteProductReq struct {
	Id int64 `path:"id"`
}

type DeleteProductResp struct {
	Message string `json:"message"`
}

type FavoriteProductReq struct {
	Id       int64 `path:"id"`
	Favorite bool  `json:"favorite"`
}

type FavoriteProductResp struct {
	Message string `json:"message"`
}

type FavoriteProductsReq struct {
	Page  int64 `form:"page,optional,default=1"`
	Limit int64 `form:"limit,optional,default=10"`
}

type FavoriteProductsResp struct {
	List  []Product `json:"list"`
	Total int64     `json:"total"`
	Page  int64     `json:"page"`
	Limit int64     `json:"limit"`
}

type FollowUserReq struct {
	Id int64 `path:"id"` // 要关注的用户ID
}

type FollowUserResp struct {
	Success bool `json:"success"` // 是否成功
}

type LikeLostFoundReq struct {
	Id int64 `path:"id"`
}

type LikeLostFoundResp struct {
	Message string `json:"message"`
}

type LocationDetail struct {
	Latitude  float64 `json:"latitude"`
	Longitude float64 `json:"longitude"`
	Address   string  `json:"address,optional"`
}

type LoginByPasswordReq struct {
	Username string `json:"username"` // 用户名/邮箱
	Password string `json:"password"` // 密码
}

type LoginByVerificationCodeReq struct {
	Phone            string `json:"phone"`            // 手机号
	VerificationCode string `json:"verificationCode"` // 验证码
}

type LoginResp struct {
	UserId       int64  `json:"userId"`       // 用户ID
	Username     string `json:"username"`     // 用户名
	Nickname     string `json:"nickname"`     // 昵称
	Avatar       string `json:"avatar"`       // 头像URL
	Phone        string `json:"phone"`        // 手机号
	AccessToken  string `json:"accessToken"`  // 访问令牌
	AccessExpire int64  `json:"accessExpire"` // 令牌过期时间
	RefreshAfter int64  `json:"refreshAfter"` // 刷新令牌时间
}

type LostFoundComment struct {
	Id         int64  `json:"id"`
	Content    string `json:"content"`
	UserId     int64  `json:"userId"`
	UserName   string `json:"userName"`
	UserAvatar string `json:"userAvatar,optional"`
	CreatedAt  string `json:"createdAt"`
}

type LostFoundCommentsReq struct {
	Id    int64 `path:"id"`
	Page  int64 `form:"page,optional,default=1"`
	Limit int64 `form:"limit,optional,default=10"`
}

type LostFoundCommentsResp struct {
	Comments []LostFoundComment `json:"comments"`
	Total    int64              `json:"total"`
	Page     int64              `json:"page"`
	Limit    int64              `json:"limit"`
}

type LostFoundDetailReq struct {
	Id int64 `path:"id"`
}

type LostFoundDetailResp struct {
	Item     LostFoundItem      `json:"item"`
	Comments []LostFoundComment `json:"comments,optional"`
}

type LostFoundItem struct {
	Id              int64                  `json:"id"`
	Title           string                 `json:"title"`
	Description     string                 `json:"description"`
	Type            string                 `json:"type"` // lost 或 found
	Category        string                 `json:"category,optional"`
	Location        string                 `json:"location,optional"`
	LocationDetail  map[string]interface{} `json:"locationDetail,optional"` // 详细位置信息，如经纬度等
	ContactInfo     string                 `json:"contactInfo,optional"`
	ContactWay      string                 `json:"contactWay,optional"` // 联系方式，如电话、微信等
	Images          []string               `json:"images,optional"`
	Status          string                 `json:"status"` // pending, found, claimed, closed
	Tags            []string               `json:"tags,optional"`
	RewardInfo      string                 `json:"rewardInfo,optional"`
	LostFoundTime   string                 `json:"lostFoundTime,optional"` // 丢失或拾取时间
	PublisherId     int64                  `json:"publisherId"`
	PublisherName   string                 `json:"publisherName"`
	PublisherAvatar string                 `json:"publisherAvatar,optional"`
	ViewCount       int64                  `json:"viewCount"`
	LikeCount       int64                  `json:"likeCount"`
	CommentCount    int64                  `json:"commentCount"`
	IsLiked         bool                   `json:"isLiked,optional"`
	CreatedAt       string                 `json:"createdAt"`
	UpdatedAt       string                 `json:"updatedAt"`
}

type LostFoundListReq struct {
	Page       int64  `form:"page,optional,default=1"`
	Limit      int64  `form:"limit,optional,default=10"`
	Type       string `form:"type,optional,default=all"`    // lost/found/all
	Status     string `form:"status,optional,default=all"`  // pending/found/claimed/closed/all
	Sort       string `form:"sort,optional,default=latest"` // latest/hot
	Keywords   string `form:"keywords,optional"`
	CategoryId int64  `form:"categoryId,optional"`
	UserId     int64  `form:"userId,optional"` // 查询特定用户的发布
}

type LostFoundListResp struct {
	List  []LostFoundItem `json:"list"`
	Total int64           `json:"total"`
	Page  int64           `json:"page"`
	Limit int64           `json:"limit"`
}

type MarkNotificationAsReadReq struct {
	Id int64 `path:"id"` // 通知ID
}

type MarkNotificationAsReadResp struct {
	Success bool `json:"success"` // 是否成功
}

type Notification struct {
	Id                 int64  `json:"id"`                          // 通知ID
	Type               string `json:"type"`                        // 通知类型
	Content            string `json:"content"`                     // 通知内容
	IsRead             bool   `json:"isRead"`                      // 是否已读
	CreatedAt          string `json:"createdAt"`                   // 创建时间
	RelatedUserId      int64  `json:"relatedUserId,optional"`      // 相关用户ID
	RelatedContentId   int64  `json:"relatedContentId,optional"`   // 相关内容ID
	RelatedContentType string `json:"relatedContentType,optional"` // 相关内容类型
}

type NotificationListResp struct {
	Total int            `json:"total"` // 总数
	List  []Notification `json:"list"`  // 通知列表
}

type PageReq struct {
	Page  int64 `form:"page,optional,default=1"`
	Limit int64 `form:"limit,optional,default=10"`
}

type Product struct {
	Id             int64                  `json:"id"`
	Title          string                 `json:"title"`
	Description    string                 `json:"description"`
	Price          float64                `json:"price"`
	OriginalPrice  float64                `json:"originalPrice,optional"`
	CategoryId     int64                  `json:"categoryId"`
	CategoryName   string                 `json:"categoryName"`
	Images         []string               `json:"images"`
	Condition      string                 `json:"condition,optional"` // 商品成色: 全新, 9成新, 8成新, etc.
	ContactInfo    string                 `json:"contactInfo,optional"`
	ContactWay     string                 `json:"contactWay,optional"` // 联系方式: 电话, 微信, QQ等
	Location       string                 `json:"location,optional"`
	LocationDetail map[string]interface{} `json:"locationDetail,optional"` // 详细位置, 如坐标
	Tags           []string               `json:"tags,optional"`
	Status         string                 `json:"status"` // 状态: 在售, 已售出, 已下架
	SellerId       int64                  `json:"sellerId"`
	SellerName     string                 `json:"sellerName"`
	SellerAvatar   string                 `json:"sellerAvatar,optional"`
	ViewCount      int64                  `json:"viewCount"`
	LikeCount      int64                  `json:"likeCount"`
	CommentCount   int64                  `json:"commentCount"`
	IsFavorite     bool                   `json:"isFavorite,optional"` // 当前用户是否收藏
	CreatedAt      string                 `json:"createdAt"`
	UpdatedAt      string                 `json:"updatedAt"`
}

type ProductCategoriesResp struct {
	Categories []Category `json:"categories"`
}

type ProductCommentsReq struct {
	Id    int64 `path:"id"`
	Page  int64 `form:"page,optional,default=1"`
	Limit int64 `form:"limit,optional,default=10"`
}

type ProductCommentsResp struct {
	Comments []Comment `json:"comments"`
	Total    int64     `json:"total"`
	Page     int64     `json:"page"`
	Limit    int64     `json:"limit"`
}

type ProductDetailReq struct {
	Id int64 `path:"id"`
}

type ProductDetailResp struct {
	Product         Product   `json:"product.sql"`
	Comments        []Comment `json:"comments,optional"`
	RelatedProducts []Product `json:"relatedProducts,optional"`
}

type ProductListReq struct {
	Page       int64   `form:"page,optional,default=1"`
	Limit      int64   `form:"limit,optional,default=10"`
	CategoryId int64   `form:"category,optional"`
	Keyword    string  `form:"keyword,optional"`
	Sort       string  `form:"sort,optional,default=latest"` // latest, priceAsc, priceDesc, popular
	MinPrice   float64 `form:"minPrice,optional"`
	MaxPrice   float64 `form:"maxPrice,optional"`
	Status     string  `form:"status,optional,default=active"` // active, sold, all
}

type ProductListResp struct {
	List  []Product `json:"list"`
	Total int64     `json:"total"`
	Page  int64     `json:"page"`
	Limit int64     `json:"limit"`
}

type PublishLostFoundReq struct {
	Title          string                 `json:"title"`
	Description    string                 `json:"description"`
	Type           string                 `json:"type"` // lost 或 found
	Category       string                 `json:"category,optional"`
	Location       string                 `json:"location,optional"`
	LocationDetail map[string]interface{} `json:"locationDetail,optional"` // 详细位置信息
	ContactInfo    string                 `json:"contactInfo,optional"`
	ContactWay     string                 `json:"contactWay,optional"`
	Images         []string               `json:"images,optional"`
	Tags           []string               `json:"tags,optional"`
	RewardInfo     string                 `json:"rewardInfo,optional"`
	LostFoundTime  string                 `json:"lostFoundTime,optional"` // 丢失或拾取时间
}

type PublishLostFoundResp struct {
	Id      int64  `json:"id"`
	Message string `json:"message"`
}

type PublishProductReq struct {
	Title          string                 `json:"title"`
	Description    string                 `json:"description"`
	Price          float64                `json:"price"`
	OriginalPrice  float64                `json:"originalPrice,optional"`
	CategoryId     int64                  `json:"categoryId"`
	Images         []string               `json:"images"`
	Condition      string                 `json:"condition,optional"`
	ContactInfo    string                 `json:"contactInfo,optional"`
	ContactWay     string                 `json:"contactWay,optional"`
	Location       string                 `json:"location,optional"`
	LocationDetail map[string]interface{} `json:"locationDetail,optional"`
	Tags           []string               `json:"tags,optional"`
}

type PublishProductResp struct {
	Id      int64  `json:"id"`
	Message string `json:"message"`
}

type RegisterReq struct {
	Username         string `json:"username"`         // 用户名
	Password         string `json:"password"`         // 密码
	Phone            string `json:"phone"`            // 手机号
	VerificationCode string `json:"verificationCode"` // 验证码
}

type RegisterResp struct {
	UserId       int64  `json:"userId"`       // 用户ID
	Username     string `json:"username"`     // 用户名
	AccessToken  string `json:"accessToken"`  // 访问令牌
	AccessExpire int64  `json:"accessExpire"` // 令牌过期时间
	RefreshAfter int64  `json:"refreshAfter"` // 刷新令牌时间
}

type ReportProductReq struct {
	Id          int64    `path:"id"`
	Reason      string   `json:"reason"`               // 举报原因
	Description string   `json:"description,optional"` // 举报详情
	Images      []string `json:"images,optional"`      // 举报证据图片
}

type ReportProductResp struct {
	ReportId int64  `json:"reportId"`
	Message  string `json:"message"`
}

type ResetPasswordReq struct {
	Phone            string `json:"phone"`            // 手机号
	VerificationCode string `json:"verificationCode"` // 验证码
	NewPassword      string `json:"newPassword"`      // 新密码
}

type ResetPasswordResp struct {
	Success bool `json:"success"` // 是否成功
}

type SendVerificationCodeReq struct {
	Phone string `json:"phone"` // 手机号
	Type  string `json:"type"`  // 验证码类型: login, register, reset_password
}

type SendVerificationCodeResp struct {
	Success bool `json:"success"` // 是否成功
}

type UnfollowUserReq struct {
	Id int64 `path:"id"` // 要取消关注的用户ID
}

type UnfollowUserResp struct {
	Success bool `json:"success"` // 是否成功
}

type UnlikeLostFoundReq struct {
	Id int64 `path:"id"`
}

type UnlikeLostFoundResp struct {
	Message string `json:"message"`
}

type UpdateLostFoundReq struct {
	Id             int64                  `path:"id"`
	Title          string                 `json:"title,optional"`
	Description    string                 `json:"description,optional"`
	Category       string                 `json:"category,optional"`
	Location       string                 `json:"location,optional"`
	LocationDetail map[string]interface{} `json:"locationDetail,optional"`
	ContactInfo    string                 `json:"contactInfo,optional"`
	ContactWay     string                 `json:"contactWay,optional"`
	Images         []string               `json:"images,optional"`
	Tags           []string               `json:"tags,optional"`
	RewardInfo     string                 `json:"rewardInfo,optional"`
	LostFoundTime  string                 `json:"lostFoundTime,optional"`
}

type UpdateLostFoundResp struct {
	Message string `json:"message"`
}

type UpdateLostFoundStatusReq struct {
	Id     int64  `path:"id"`
	Status string `json:"status"` // pending, found, claimed, closed
}

type UpdateLostFoundStatusResp struct {
	Message string `json:"message"`
}

type UpdateProductReq struct {
	Id             int64                  `path:"id"`
	Title          string                 `json:"title,optional"`
	Description    string                 `json:"description,optional"`
	Price          float64                `json:"price,optional"`
	OriginalPrice  float64                `json:"originalPrice,optional"`
	CategoryId     int64                  `json:"categoryId,optional"`
	Images         []string               `json:"images,optional"`
	Condition      string                 `json:"condition,optional"`
	ContactInfo    string                 `json:"contactInfo,optional"`
	ContactWay     string                 `json:"contactWay,optional"`
	Location       string                 `json:"location,optional"`
	LocationDetail map[string]interface{} `json:"locationDetail,optional"`
	Tags           []string               `json:"tags,optional"`
	Status         string                 `json:"status,optional"`
}

type UpdateProductResp struct {
	Message string `json:"message"`
}

type UpdateUserInfoReq struct {
	Nickname string `json:"nickname,optional"` // 昵称
	Gender   string `json:"gender,optional"`   // 性别
	Bio      string `json:"bio,optional"`      // 个人简介
}

type UpdateUserInfoResp struct {
	Success bool `json:"success"` // 是否成功
}

type UserInfoResp struct {
	UserId         int64  `json:"userId"`          // 用户ID
	Username       string `json:"username"`        // 用户名
	Nickname       string `json:"nickname"`        // 昵称
	Avatar         string `json:"avatar"`          // 头像URL
	Phone          string `json:"phone"`           // 手机号
	Gender         string `json:"gender,optional"` // 性别
	Bio            string `json:"bio,optional"`    // 个人简介
	FollowingCount int    `json:"followingCount"`  // 关注数
	FollowersCount int    `json:"followersCount"`  // 粉丝数
	ProductCount   int    `json:"productCount"`    // 发布的商品数
	ArticleCount   int    `json:"articleCount"`    // 发布的文章数
	LostFoundCount int    `json:"lostFoundCount"`  // 发布的失物招领数
	CreatedAt      string `json:"createdAt"`       // 创建时间
}

type UserLostFoundReq struct {
	UserId int64 `path:"userId"`
	Page   int64 `form:"page,optional,default=1"`
	Limit  int64 `form:"limit,optional,default=10"`
}

type UserLostFoundResp struct {
	List  []LostFoundItem `json:"list"`
	Total int64           `json:"total"`
	Page  int64           `json:"page"`
	Limit int64           `json:"limit"`
}

type UserProductsReq struct {
	UserId int64  `path:"userId"`
	Page   int64  `form:"page,optional,default=1"`
	Limit  int64  `form:"limit,optional,default=10"`
	Status string `form:"status,optional"`
}

type UserProductsResp struct {
	List  []Product `json:"list"`
	Total int64     `json:"total"`
	Page  int64     `json:"page"`
	Limit int64     `json:"limit"`
}

type UserProfileReq struct {
	Id int64 `path:"id"` // 用户ID
}

type UserProfileResp struct {
	UserId         int64  `json:"userId"`          // 用户ID
	Username       string `json:"username"`        // 用户名
	Nickname       string `json:"nickname"`        // 昵称
	Avatar         string `json:"avatar"`          // 头像URL
	Gender         string `json:"gender,optional"` // 性别
	Bio            string `json:"bio,optional"`    // 个人简介
	FollowingCount int    `json:"followingCount"`  // 关注数
	FollowersCount int    `json:"followersCount"`  // 粉丝数
	IsFollowing    bool   `json:"isFollowing"`     // 当前用户是否关注了该用户
	ProductCount   int    `json:"productCount"`    // 发布的商品数
	ArticleCount   int    `json:"articleCount"`    // 发布的文章数
	LostFoundCount int    `json:"lostFoundCount"`  // 发布的失物招领数
	CreatedAt      string `json:"createdAt"`       // 创建时间
}

type VerifyCodeReq struct {
	Phone            string `json:"phone"`            // 手机号
	VerificationCode string `json:"verificationCode"` // 验证码
	Type             string `json:"type"`             // 验证类型
}

type VerifyCodeResp struct {
	Success bool   `json:"success"`          // 是否成功
	Message string `json:"message,optional"` // 消息
}
