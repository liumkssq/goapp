syntax = "v1"

import "apis/user.api"
import "apis/product.api"

//user ==
@server (
	prefix: /api/user
	group:  user
)
service api-api {
	@doc "账号密码登录"
	@handler LoginByPassword
	post /login/password (LoginByPasswordReq) returns (LoginResp)

	@doc "验证码登录"
	@handler LoginByVerificationCode
	post /login/sms-code (LoginByVerificationCodeReq) returns (LoginResp)

	@doc "自动登录（仅用于开发环境测试）"
	@handler AutoLogin
	post /login/auto returns (LoginResp)

	@doc "用户注册"
	@handler Register
	post /register (RegisterReq) returns (RegisterResp)

	@doc "发送验证码"
	@handler SendVerificationCode
	post /send-code (SendVerificationCodeReq) returns (SendVerificationCodeResp)

	@doc "验证验证码"
	@handler VerifyCode
	post /verify-code (VerifyCodeReq) returns (VerifyCodeResp)

	@doc "重置密码"
	@handler ResetPassword
	post /reset-password (ResetPasswordReq) returns (ResetPasswordResp)
}

// 图形验证码服务已移除
@server (
	prefix: /api/user
	group:  userOp
	jwt:    Auth
)
service api-api {
	@doc "获取当前用户信息"
	@handler GetUserInfo
	get /info returns (UserInfoResp)

	@doc "获取用户详细资料"
	@handler GetUserProfile
	get /profile/:id (UserProfileReq) returns (UserProfileResp)

	@doc "更新用户信息"
	@handler UpdateUserInfo
	put /info (UpdateUserInfoReq) returns (UpdateUserInfoResp)

	@doc "修改密码"
	@handler ChangePassword
	put /password (ChangePasswordReq) returns (ChangePasswordResp)

	@doc "退出登录"
	@handler Logout
	post /logout returns (UpdateUserInfoResp)

	@doc "关注用户"
	@handler FollowUser
	post /follow/:id (FollowUserReq) returns (FollowUserResp)

	@doc "取消关注用户"
	@handler UnfollowUser
	post /unfollow/:id (UnfollowUserReq) returns (UnfollowUserResp)

	@doc "获取通知"
	@handler GetNotifications
	get /notifications returns (NotificationListResp)

	@doc "标记通知为已读"
	@handler MarkNotificationAsRead
	put /notifications/:id/read (MarkNotificationAsReadReq) returns (MarkNotificationAsReadResp)
}

@server (
	prefix: /api/product
	group:  product
)
service api-api {
	// 获取商品列表
	@handler GetProductList
	get /list (ProductListReq) returns (ProductListResp)

	// 获取商品详情
	@handler GetProductDetail
	get /detail/:id (ProductDetailReq) returns (ProductDetailResp)

	// 获取商品分类
	@handler GetProductCategories
	get /categories returns (ProductCategoriesResp)
}

@server (
	prefix: /api/product
	group:  ProductOp
	jwt:    Auth
)
service api-api {
	// 发布商品
	@handler PublishProduct
	post /publish (PublishProductReq) returns (PublishProductResp)

	// 更新商品
	@handler UpdateProduct
	put /update/:id (UpdateProductReq) returns (UpdateProductResp)

	// 删除商品
	@handler DeleteProduct
	delete /delete/:id (DeleteProductReq) returns (DeleteProductResp)

	// 获取用户的商品
	@handler GetUserProducts
	get /user/:userId (UserProductsReq) returns (UserProductsResp)

	// 收藏/取消收藏商品
	@handler FavoriteProduct
	post /favorite/:id (FavoriteProductReq) returns (FavoriteProductResp)

	// 获取收藏的商品
	@handler GetFavoriteProducts
	get /favorites (FavoriteProductsReq) returns (FavoriteProductsResp)

	// 举报商品
	@handler ReportProduct
	post /report/:id (ReportProductReq) returns (ReportProductResp)

	// 评论商品
	@handler CommentProduct
	post /comment/:id (CommentProductReq) returns (CommentProductResp)

	// 获取商品评论
	@handler GetProductComments
	get /comments/:id (ProductCommentsReq) returns (ProductCommentsResp)
}

