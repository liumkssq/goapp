syntax = "v1"

import "apis/user.api"
import "apis/product.api"
import "apis/lostfound.api"
//import "apis/im.api"
import "apis/search.api"
import "apis/myim.api"
import "apis/social.api"

//user ==
@server (
	prefix: /api/user
	group:  user
)
service api-api {
	@doc "账号密码登录"
	@handler LoginByPassword
	post /login/password (LoginByPasswordReq) returns (LoginResp)

	@doc "验证码登录"
	@handler LoginByVerificationCode
	post /login/sms-code (LoginByVerificationCodeReq) returns (LoginResp)

	@doc "自动登录（仅用于开发环境测试）"
	@handler AutoLogin
	post /login/auto returns (LoginResp)

	@doc "用户注册"
	@handler Register
	post /register (RegisterReq) returns (RegisterResp)

	@doc "发送验证码"
	@handler SendVerificationCode
	post /send-code (SendVerificationCodeReq) returns (SendVerificationCodeResp)

	@doc "验证验证码"
	@handler VerifyCode
	post /verify-code (VerifyCodeReq) returns (VerifyCodeResp)

	@doc "重置密码"
	@handler ResetPassword
	post /reset-password (ResetPasswordReq) returns (ResetPasswordResp)
}

// 图形验证码服务已移除
@server (
	prefix: /api/user
	group:  userOp
	jwt:    JwtAuth
)
service api-api {
	@doc "获取当前用户信息"
	@handler GetUserInfo
	get /info returns (UserInfoResp)

	@doc "获取用户详细资料"
	@handler GetUserProfile
	get /profile/:id (UserProfileReq) returns (UserProfileResp)

	@doc "更新用户信息"
	@handler UpdateUserInfo
	put /info (UpdateUserInfoReq) returns (UpdateUserInfoResp)

	@doc "修改密码"
	@handler ChangePassword
	put /password (ChangePasswordReq) returns (ChangePasswordResp)

	@doc "退出登录"
	@handler Logout
	post /logout returns (UpdateUserInfoResp)

	@doc "关注用户"
	@handler FollowUser
	post /follow/:id (FollowUserReq) returns (FollowUserResp)

	@doc "取消关注用户"
	@handler UnfollowUser
	post /unfollow/:id (UnfollowUserReq) returns (UnfollowUserResp)

	@doc "获取通知"
	@handler GetNotifications
	get /notifications returns (NotificationListResp)

	@doc "标记通知为已读"
	@handler MarkNotificationAsRead
	put /notifications/:id/read (MarkNotificationAsReadReq) returns (MarkNotificationAsReadResp)
}

@server (
	prefix: /api/product
	group:  product
)
service api-api {
	// 获取商品列表
	@handler GetProductList
	get /list (ProductListReq) returns (ProductListResp)

	// 获取商品详情
	@handler GetProductDetail
	get /detail/:id (ProductDetailReq) returns (ProductDetailResp)

	// 获取商品分类
	@handler GetProductCategories
	get /categories returns (ProductCategoriesResp)
}

@server (
	prefix: /api/product
	group:  ProductOp
	jwt:    JwtAuth
)
service api-api {
	// 发布商品
	@handler PublishProduct
	post /publish (PublishProductReq) returns (PublishProductResp)

	// 更新商品
	@handler UpdateProduct
	put /update/:id (UpdateProductReq) returns (UpdateProductResp)

	// 删除商品
	@handler DeleteProduct
	delete /delete/:id (DeleteProductReq) returns (DeleteProductResp)

	// 获取用户的商品
	@handler GetUserProducts
	get /userProduct/:userId (UserProductsReq) returns (UserProductsResp)

	// 收藏/取消收藏商品
	@handler FavoriteProduct
	post /favorite/:id (FavoriteProductReq) returns (FavoriteProductResp)

	// 获取收藏的商品
	@handler GetFavoriteProducts
	get /favorites (FavoriteProductsReq) returns (FavoriteProductsResp)

	// 举报商品
	@handler ReportProduct
	post /report/:id (ReportProductReq) returns (ReportProductResp)

	// 评论商品
	@handler CommentProduct
	post /comment/:id (CommentProductReq) returns (CommentProductResp)

	// 获取商品评论
	@handler GetProductComments
	get /comments/:id (ProductCommentsReq) returns (ProductCommentsResp)
}

@server (
	prefix: /api/lost-found
	group:  lostfound
)
service api-api {
	// 获取失物招领列表
	@handler GetLostFoundList
	get /list (LostFoundListReq) returns (LostFoundListResp)

	// 获取失物招领详情
	@handler GetLostFoundDetail
	get /detail/:id (LostFoundDetailReq) returns (LostFoundDetailResp)
}

@server (
	prefix: /api/lost-found
	group:  lostfoundOp
	jwt:    JwtAuth
)
service api-api {
	// 获取用户发布的失物招领
	@handler GetUserLostFound
	get /userLostFound/:userId (UserLostFoundReq) returns (UserLostFoundResp)

	// 发布失物招领
	@handler PublishLostFound
	post / (PublishLostFoundReq) returns (PublishLostFoundResp)

	// 更新失物招领
	@handler UpdateLostFound
	put /:id (UpdateLostFoundReq) returns (UpdateLostFoundResp)

	// 删除失物招领
	@handler DeleteLostFound
	delete /:id (DeleteLostFoundReq) returns (DeleteLostFoundResp)

	// 更新失物招领状态
	@handler UpdateLostFoundStatus
	put /:id/status (UpdateLostFoundStatusReq) returns (UpdateLostFoundStatusResp)

	// 评论失物招领
	@handler CommentLostFound
	post /:id/comment (CommentLostFoundReq) returns (CommentLostFoundResp)

	// 获取失物招领评论
	@handler GetLostFoundComments
	get /:id/comments (LostFoundCommentsReq) returns (LostFoundCommentsResp)

	// 点赞失物招领
	@handler LikeLostFound
	post /:id/like (LikeLostFoundReq) returns (LikeLostFoundResp)

	// 取消点赞失物招领
	@handler UnlikeLostFound
	post /:id/unlike (UnlikeLostFoundReq) returns (UnlikeLostFoundResp)
}

//@server(
// prefix: /api/im
//)
//service IM {
// // 搜索用户
// @handler SearchUsers
// get /search-users (SearchUsersReq) returns (SearchUsersResp)
//
// // 搜索群组
// @handler SearchGroups
// get /search-groups (SearchGroupsReq) returns (SearchGroupsResp)
//}
//
//@server(
// prefix: /api/im
// jwt: Auth
// group: social
//)
//service IM {
// // 获取联系人列表
// @handler GetContactList
// get /contacts returns (ContactListResp)
//
// // 获取好友请求列表
// @handler GetFriendRequests
// get /friend-requests returns (FriendRequestsResp)
//
// // 发送好友申请
// @handler SendFriendRequest
// post /friend-request (SendFriendRequestReq) returns (SendFriendRequestResp)
//
// // 处理好友申请
// @handler HandleFriendRequest
// put /friend-request/:requestId (HandleFriendRequestReq) returns (HandleFriendRequestResp)
//
// // 获取用户信息
// @handler GetCurrentUserInfo
// get /user/:id/info (UserInfoReq) returns (UserInfoResp)
//
// // 获取用户详情
// @handler GetUserDetail
// get /user/:id (UserDetailReq) returns (UserDetailResp)
//
// // 设置好友备注
// @handler SetFriendNote
// put /friend/note (SetFriendNoteReq) returns (SetFriendNoteResp)
//
// // 删除好友
// @handler DeleteFriend
// delete /friend/:id (DeleteFriendReq) returns (DeleteFriendResp)
//
// // 获取群聊列表
// @handler GetGroupList
// get /groups returns (GroupListResp)
//
// // 创建群聊
// @handler CreateGroup
// post /group (CreateGroupReq) returns (CreateGroupResp)
//
// // 获取群聊详情
// @handler GetGroupInfo
// get /group/:id (GroupInfoReq) returns (GroupInfoResp)
//
// // 获取群成员列表
// @handler GetGroupMembers
// get /group/:id/members (GroupMembersReq) returns (GroupMembersResp)
//
// // 邀请好友加入群聊
// @handler InviteToGroup
// post /group/invite (InviteToGroupReq) returns (InviteToGroupResp)
//
// // 申请加入群聊
// @handler ApplyToJoinGroup
// post /group/apply (ApplyToJoinGroupReq) returns (ApplyToJoinGroupResp)
//
// // 处理入群申请
// @handler HandleGroupApplication
// put /group/application/:applicationId (HandleGroupApplicationReq) returns (HandleGroupApplicationResp)
//
// // 获取入群申请列表
// @handler GetGroupApplications
// get /group/:id/applications (GroupApplicationsReq) returns (GroupApplicationsResp)
//
// // 设置群成员角色
// @handler SetGroupMemberRole
// put /group/member/role (SetGroupMemberRoleReq) returns (SetGroupMemberRoleResp)
//
// // 移除群成员
// @handler RemoveGroupMember
// delete /group/member (RemoveGroupMemberReq) returns (RemoveGroupMemberResp)
//
// // 退出群聊
// @handler LeaveGroup
// post /group/:id/leave (LeaveGroupReq) returns (LeaveGroupResp)
//
// // 解散群聊
// @handler DismissGroup
// post /group/:id/dismiss (DismissGroupReq) returns (DismissGroupResp)
//
// // 更新群聊信息
// @handler UpdateGroupInfo
// put /group/:id (UpdateGroupInfoReq) returns (UpdateGroupInfoResp)
//
// // 获取会话列表
// @handler GetConversationList
// get /conversations returns (ConversationListResp)
//
// // 获取会话详情
// @handler GetConversationDetail
// get /conversation/:id (ConversationDetailReq) returns (ConversationDetailResp)
//
// // 创建会话
// @handler CreateConversation
// post /conversation (CreateConversationReq) returns (CreateConversationResp)
//
// // 删除会话
// @handler DeleteConversation
// delete /conversation/:id (DeleteConversationReq) returns (DeleteConversationResp)
//
// // 标记会话已读
// @handler MarkConversationRead
// put /conversation/:id/read (MarkConversationReadReq) returns (MarkConversationReadResp)
//
// // 获取聊天记录
// @handler GetMessages
// get /messages (GetMessagesReq) returns (GetMessagesResp)
//
// // HTTP发送消息
// @handler SendMessage
// post /message (SendMessageReq) returns (SendMessageResp)
//
// // 删除消息
// @handler DeleteMessage
// delete /message/:id (DeleteMessageReq) returns (DeleteMessageResp)
//
// // 撤回消息
// @handler RecallMessage
// put /message/:id/recall (RecallMessageReq) returns (RecallMessageResp)
//
// // 清空会话消息
// @handler ClearMessages
// delete /conversation/:id/messages (ClearMessagesReq) returns (ClearMessagesResp)
//
// // 获取未读消息数
// @handler GetUnreadCount
// get /unread-count returns (UnreadCountResp)
//
// // 搜索联系人
// @handler SearchContacts
// get /search-contacts (SearchContactsReq) returns (SearchContactsResp)
//
// // 获取好友列表
// @handler GetFriendList
// get /friends returns (FriendListResp)
//
// // 获取用户在线状态
// @handler GetUserOnlineStatus
// post /user/online-status (UserOnlineStatusReq) returns (UserOnlineStatusResp)
//
// // 设置用户状态
// @handler SetUserStatus
// put /user/status (SetUserStatusReq) returns (SetUserStatusResp)
//
// // 获取群公告
// @handler GetGroupAnnouncements
// get /group/:id/announcements (GroupAnnouncementsReq) returns (GroupAnnouncementsResp)
//
// // 发布群公告
// @handler PublishGroupAnnouncement
// post /group/:id/announcement (PublishGroupAnnouncementReq) returns (PublishGroupAnnouncementResp)
//}
@server (
	prefix: /api/search
	group:  allsearch
)
service api-api {
	// 全局搜索
	@handler GlobalSearch
	get / (GlobalSearchReq) returns (GlobalSearchResp)

	// 搜索商品
	@handler SearchProducts
	get /products (SearchProductsReq) returns (SearchProductsResp)

	// 搜索文章
	@handler SearchArticles
	get /articles (SearchArticlesReq) returns (SearchArticlesResp)

	// 搜索失物招领
	@handler SearchLostFound
	get /lostfound (SearchLostFoundReq) returns (SearchLostFoundResp)

	// 搜索用户
	@handler SearchUsers
	get /users (SearchUsersReq) returns (SearchUsersResp)

	// 获取热门搜索关键词
	@handler GetHotSearchKeywords
	get /hot-keywords returns (HotSearchKeywordsResp)
}

@server (
	prefix: /api/search
	jwt:    JwtAuth
	group:  userSearch
)
service api-api {
	// 获取搜索历史
	@handler GetSearchHistory
	get /history returns (SearchHistoryResp)

	// 清除搜索历史
	@handler ClearSearchHistory
	delete /history returns (CommonResp)
}

@server (
	prefix: /api/im
	jwt:    JwtAuth
	group:  im
)
service api-api {
	@doc "根据用户获取聊天记录"
	@handler getChatLog
	get /chatlog (ChatLogReq) returns (ChatLogResp)

	@doc "建立会话"
	@handler setUpUserConversation
	post /setup/conversation (SetUpUserConversationReq) returns (setUpUserConversationResp)

	@doc "获取会话"
	@handler getConversations
	get /conversation (GetConversationsReq) returns (GetConversationsResp)

	@doc "更新会话"
	@handler putConversations
	put /conversation (PutConversationsReq) returns (PutConversationsResp)

	@handler getChatLogReadRecords
	get /chatlog/readRecords (GetChatLogReadRecordsReq) returns (GetChatLogReadRecordsResp)
}

//@server (
// prefix: v1/im
// jwt:    JwtAuth
//)
//service im {
// @handler getChatLogReadRecords
// get /chatlog/readRecords (GetChatLogReadRecordsReq) returns (GetChatLogReadRecordsResp)
//}
//
@server (
	prefix: api/social
	group:  friend
	jwt:    JwtAuth
)
service api-api {
	@doc "好友申请"
	@handler friendPutIn
	post /friend/putIn (FriendPutInReq) returns (FriendPutInResp)

	@doc "好友申请处理"
	@handler friendPutInHandle
	put /friend/putIn (FriendPutInHandleReq) returns (FriendPutInHandleResp)

	@doc "好友申请列表"
	@handler friendPutInList
	get /friend/putIns (FriendPutInListReq) returns (FriendPutInListResp)

	@doc "好友列表"
	@handler friendList
	get /friends (FriendListReq) returns (FriendListResp)

	@doc "好友在线情况"
	@handler friendsOnline
	get /friends/online (FriendsOnlineReq) returns (FriendsOnlineResp)
}

@server (
	prefix:     api/social
	group:      group
	jwt:        JwtAuth
	middleware: IdempotenceMiddleware,LimitMiddleware
)
service api-api {
	@doc "创群"
	@handler createGroup
	post /group (GroupCreateReq) returns (GroupCreateResp)

	@doc "申请进群"
	@handler groupPutIn
	post /group/putIn (GroupPutInRep) returns (GroupPutInResp)

	@doc "申请进群处理"
	@handler groupPutInHandle
	put /group/putIn (GroupPutInHandleRep) returns (GroupPutInHandleResp)

	@doc "申请进群列表"
	@handler groupPutInList
	get /group/putIns (GroupPutInListRep) returns (GroupPutInListResp)

	@doc "用户申群列表"
	@handler groupList
	get /groups (GroupListRep) returns (GroupListResp)

	@doc "成员列表列表"
	@handler groupUserList
	get /group/users (GroupUserListReq) returns (GroupUserListResp)

	@doc "群在线用户"
	@handler groupUserOnline
	get /group/users/online (GroupUserOnlineReq) returns (GroupUserOnlineResp)
}

