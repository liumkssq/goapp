syntax = "v1"

info (
    title: "地图服务API"
    desc: "提供地图相关功能，包括地理编码、位置搜索等"
    author: "Campus Team"
    version: "1.0"
)

// 数据类型定义
type (
    // 坐标点
    Location {
        Lng float64 `json:"lng"` // 经度
        Lat float64 `json:"lat"` // 纬度
    }

    // 地址信息
    AddressInfo {
        FormattedAddress string `json:"formattedAddress"` // 格式化后的地址
        Province string `json:"province,optional"` // 省份
        City string `json:"city,optional"` // 城市
        District string `json:"district,optional"` // 区县
        Street string `json:"street,optional"` // 街道
        StreetNumber string `json:"streetNumber,optional"` // 门牌号
        AdCode string `json:"adCode,optional"` // 行政区划代码
        Location Location `json:"location"` // 经纬度
    }

    // 地点信息
    PlaceInfo {
        Id string `json:"id"`
        Name string `json:"name"`
        Address string `json:"address"`
        Location Location `json:"location"`
        Category string `json:"category,optional"`
        Distance float64 `json:"distance,optional"` // 与中心点的距离，仅周边搜索时有
        AdCode string `json:"adCode,optional"`
        Telephone string `json:"telephone,optional"`
        PhotoUrl string `json:"photoUrl,optional"`
        Extra map[string]string `json:"extra,optional"` // 额外信息
    }

    // 地址解析请求
    GeocodeReq {
        Address string `form:"address"` // 地址
        City string `form:"city,optional"` // 城市名
    }

    // 地址解析响应
    GeocodeResp {
        Location Location `json:"location"` // 解析出的坐标
        FormattedAddress string `json:"formattedAddress"` // 格式化后的地址
        Level string `json:"level,optional"` // 解析精度
    }

    // 逆地址解析请求
    ReverseGeocodeReq {
        Lng float64 `form:"lng"` // 经度
        Lat float64 `form:"lat"` // 纬度
    }

    // 逆地址解析响应
    ReverseGeocodeResp {
        Address AddressInfo `json:"address"` // 解析出的地址信息
        Pois []PlaceInfo `json:"pois,optional"` // 附近的POI信息
    }

    // 位置建议请求
    LocationSuggestionsReq {
        Keyword string `form:"keyword"` // 关键词
        Region string `form:"region,optional,default=全国"` // 区域
    }

    // 位置建议响应
    LocationSuggestionsResp {
        Suggestions []PlaceInfo `json:"suggestions"` // 建议列表
    }

    // 地点检索请求
    SearchPlacesReq {
        Keyword string `form:"keyword"` // 关键词
        Region string `form:"region,optional,default=全国"` // 区域
        Page int64 `form:"page,optional,default=1"` // 页码
        PageSize int64 `form:"pageSize,optional,default=10"` // 每页数量
    }

    // 地点检索响应
    SearchPlacesResp {
        Places []PlaceInfo `json:"places"` // 检索结果
        Total int64 `json:"total"` // 总数
        Page int64 `json:"page"` // 页码
        PageSize int64 `json:"pageSize"` // 每页数量
    }

    // 周边检索请求
    SearchNearbyReq {
        Lng float64 `form:"lng"` // 经度
        Lat float64 `form:"lat"` // 纬度
        Keyword string `form:"keyword,optional"` // 关键词
        Radius int64 `form:"radius,optional,default=1000"` // 半径(米)
        Type string `form:"type,optional"` // POI类型
        Page int64 `form:"page,optional,default=1"` // 页码
        PageSize int64 `form:"pageSize,optional,default=10"` // 每页数量
    }

    // 周边检索响应
    SearchNearbyResp {
        Places []PlaceInfo `json:"places"` // 检索结果
        Total int64 `json:"total"` // 总数
        Page int64 `json:"page"` // 页码
        PageSize int64 `json:"pageSize"` // 每页数量
    }

    // 距离计算请求
    DistanceReq {
        FromLat float64 `form:"fromLat"` // 起点纬度
        FromLng float64 `form:"fromLng"` // 起点经度
        ToLat float64 `form:"toLat"` // 终点纬度
        ToLng float64 `form:"toLng"` // 终点经度
    }

    // 距离计算响应
    DistanceResp {
        Distance float64 `json:"distance"` // 距离(米)
        Duration int64 `json:"duration,optional"` // 时间(秒)
    }

    // 用户地址
    UserAddress {
        Id int64 `json:"id"`
        Name string `json:"name"` // 地址名称，如"家"、"公司"
        Address string `json:"address"` // 地址文本
        Location Location `json:"location"` // 经纬度
        IsDefault bool `json:"isDefault"` // 是否默认地址
        Tags []string `json:"tags,optional"` // 标签
        AdCode string `json:"adCode,optional"` // 行政区划代码
        UserId int64 `json:"userId"`
        CreatedAt string `json:"createdAt"`
        UpdatedAt string `json:"updatedAt"`
    }

    // 保存用户地址请求
    SaveUserAddressReq {
        Name string `json:"name"` // 地址名称
        Address string `json:"address"` // 地址文本
        Location Location `json:"location"` // 经纬度
        IsDefault bool `json:"isDefault,optional"` // 是否默认地址
        Tags []string `json:"tags,optional"` // 标签
        AdCode string `json:"adCode,optional"` // 行政区划代码
    }

    // 保存用户地址响应
    SaveUserAddressResp {
        Id int64 `json:"id"` // 地址ID
        Message string `json:"message"`
    }

    // 获取用户地址响应
    UserAddressesResp {
        Addresses []UserAddress `json:"addresses"` // 地址列表
    }

    // 删除用户地址请求
    DeleteUserAddressReq {
        AddressId int64 `path:"addressId"` // 地址ID
    }

    // 删除用户地址响应
    DeleteUserAddressResp {
        Message string `json:"message"`
    }
)

@server(
    prefix: /api/map
)
service Map {
    // 地址解析（地址转坐标）
    @handler Geocode
    get /geocode (GeocodeReq) returns (GeocodeResp)
    
    // 逆地址解析（坐标转地址）
    @handler ReverseGeocode
    get /reverse-geocode (ReverseGeocodeReq) returns (ReverseGeocodeResp)
    
    // 获取位置建议
    @handler GetLocationSuggestions
    get /suggestions (LocationSuggestionsReq) returns (LocationSuggestionsResp)
    
    // 地点检索
    @handler SearchPlaces
    get /search (SearchPlacesReq) returns (SearchPlacesResp)
    
    // 周边检索
    @handler SearchNearby
    get /nearby (SearchNearbyReq) returns (SearchNearbyResp)
    
    // 距离计算
    @handler GetDistance
    get /distance (DistanceReq) returns (DistanceResp)
}

@server(
    prefix: /api/map
    jwt: Auth
)
service Map {
    // 保存用户常用地址
    @handler SaveUserAddress
    post /save-address (SaveUserAddressReq) returns (SaveUserAddressResp)
    
    // 获取用户常用地址列表
    @handler GetUserAddresses
    get /user-addresses returns (UserAddressesResp)
    
    // 删除用户常用地址
    @handler DeleteUserAddress
    delete /address/:addressId (DeleteUserAddressReq) returns (DeleteUserAddressResp)
}