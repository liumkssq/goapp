syntax = "proto3";

package ai;

option go_package = "./ai";

// AI服务
service AIService {
  // 聊天完成
  rpc ChatCompletion(ChatCompletionRequest) returns (ChatCompletionResponse);
  
  // 文本生成
  rpc TextGeneration(TextGenerationRequest) returns (TextGenerationResponse);
  
  // 图像生成
  rpc ImageGeneration(ImageGenerationRequest) returns (ImageGenerationResponse);
  
  // 图像识别
  rpc ImageRecognition(ImageRecognitionRequest) returns (ImageRecognitionResponse);
  
  // 文本翻译
  rpc Translation(TranslationRequest) returns (TranslationResponse);
  
  // 文本纠错
  rpc TextCorrection(TextCorrectionRequest) returns (TextCorrectionResponse);
  
  // 文本摘要
  rpc TextSummarization(TextSummarizationRequest) returns (TextSummarizationResponse);
  
  // 情感分析
  rpc SentimentAnalysis(SentimentAnalysisRequest) returns (SentimentAnalysisResponse);
  
  // 分析商品图片
  rpc AnalyzeProductImage(AnalyzeProductImageRequest) returns (AnalyzeProductImageResponse);
  
  // 生成内容
  rpc GenerateContent(GenerateContentRequest) returns (GenerateContentResponse);
  
  // 生成标签
  rpc GenerateTags(GenerateTagsRequest) returns (GenerateTagsResponse);
  
  // 估算价格
  rpc EstimatePrice(EstimatePriceRequest) returns (EstimatePriceResponse);
  
  // 优化商品信息
  rpc OptimizeProduct(OptimizeProductRequest) returns (OptimizeProductResponse);
}

// 聊天消息
message ChatMessage {
  string role = 1;     // user, assistant, system
  string content = 2;  // 消息内容
}

// 聊天完成请求
message ChatCompletionRequest {
  repeated ChatMessage messages = 1;  // 消息列表
  string model = 2;                   // 模型名称
  double temperature = 3;             // 温度参数
  int64 max_tokens = 4;               // 最大token数
  string system_prompt = 5;           // 系统提示词
  int64 user_id = 6;                  // 用户ID
}

// 聊天完成响应
message ChatCompletionResponse {
  string content = 1;                // 生成的内容
  map<string, int64> token_usage = 2; // token使用情况
}

// 文本生成请求
message TextGenerationRequest {
  string prompt = 1;     // 提示词
  string model = 2;      // 模型名称
  int64 max_tokens = 3;  // 最大token数
  double temperature = 4; // 温度参数
  string type = 5;       // 生成类型
  int64 user_id = 6;     // 用户ID
}

// 文本生成响应
message TextGenerationResponse {
  string content = 1;                // 生成的内容
  map<string, int64> token_usage = 2; // token使用情况
}

// 图像生成请求
message ImageGenerationRequest {
  string prompt = 1;   // 提示词
  string model = 2;    // 模型名称
  string size = 3;     // 尺寸
  string quality = 4;  // 质量
  string style = 5;    // 风格
  int64 count = 6;     // 生成数量
  int64 user_id = 7;   // 用户ID
}

// 图像生成响应
message ImageGenerationResponse {
  repeated string images = 1; // 生成的图片URL数组
}

// 图像识别请求
message ImageRecognitionRequest {
  string image_url = 1; // 图片URL
  string type = 2;      // 识别类型
  int64 user_id = 3;    // 用户ID
}

// 识别到的对象
message RecognizedObject {
  string class_name = 1;   // 类别名称
  float confidence = 2;    // 置信度
  float x = 3;             // 左上角x坐标
  float y = 4;             // 左上角y坐标
  float width = 5;         // 宽度
  float height = 6;        // 高度
}

// 图像识别响应
message ImageRecognitionResponse {
  string description = 1;              // 识别结果描述
  repeated string tags = 2;            // 识别标签
  repeated RecognizedObject objects = 3; // 识别到的对象
  string text = 4;                     // 识别到的文本
}

// 文本翻译请求
message TranslationRequest {
  string text = 1;        // 待翻译文本
  string source_lang = 2; // 源语言
  string target_lang = 3; // 目标语言
  int64 user_id = 4;      // 用户ID
}

// 文本翻译响应
message TranslationResponse {
  string translated_text = 1; // 翻译后的文本
  string detected_lang = 2;   // 检测到的源语言
}

// 文本纠错请求
message TextCorrectionRequest {
  string text = 1;     // 待纠错文本
  string lang = 2;     // 语言
  int64 user_id = 3;   // 用户ID
}

// 文本修改
message TextChange {
  string original = 1;  // 原始文本
  string corrected = 2; // 纠错后文本
  int64 start = 3;      // 起始位置
  int64 end = 4;        // 结束位置
  string reason = 5;    // 修改原因
}

// 文本纠错响应
message TextCorrectionResponse {
  string corrected_text = 1;  // 纠错后的文本
  repeated TextChange changes = 2; // 修改列表
}

// 文本摘要请求
message TextSummarizationRequest {
  string text = 1;       // 待摘要文本
  int64 max_length = 2;  // 最大长度
  string type = 3;       // 摘要类型
  int64 user_id = 4;     // 用户ID
}

// 文本摘要响应
message TextSummarizationResponse {
  string summary = 1; // 摘要内容
}

// 情感分析请求
message SentimentAnalysisRequest {
  string text = 1;     // 待分析文本
  int64 user_id = 2;   // 用户ID
}

// 情感分析响应
message SentimentAnalysisResponse {
  string sentiment = 1;                 // 情感: positive, negative, neutral
  double score = 2;                     // 情感分数 -1到1
  map<string, double> analysis = 3;     // 详细分析结果
}

// 分析商品图片请求
message AnalyzeProductImageRequest {
  string image_url = 1; // 图片URL
  string category = 2;  // 商品分类
  int64 user_id = 3;    // 用户ID
}

// 分析商品图片响应
message AnalyzeProductImageResponse {
  string title = 1;             // 生成的标题
  string description = 2;       // 生成的描述
  string category = 3;          // 识别的分类
  string condition = 4;         // 识别的成色
  repeated string tags = 5;     // 生成的标签
  double estimated_price = 6;   // 估算价格
}

// 生成内容请求
message GenerateContentRequest {
  string prompt = 1;    // 提示词
  string category = 2;  // 商品分类
  string condition = 3; // 商品成色
  string type = 4;      // 生成类型
  int64 user_id = 5;    // 用户ID
}

// 生成内容响应
message GenerateContentResponse {
  string content = 1; // 生成的内容
}

// 生成标签请求
message GenerateTagsRequest {
  string description = 1; // 商品描述
  string category = 2;    // 商品分类
  string title = 3;       // 商品标题
  int64 user_id = 4;      // 用户ID
}

// 生成标签响应
message GenerateTagsResponse {
  repeated string tags = 1; // 生成的标签
}

// 估算价格请求
message EstimatePriceRequest {
  string title = 1;               // 商品标题
  string description = 2;         // 商品描述
  string category = 3;            // 商品分类
  string condition = 4;           // 商品成色
  repeated string image_urls = 5; // 图片URL数组
  int64 user_id = 6;              // 用户ID
}

// 估算价格响应
message EstimatePriceResponse {
  double estimated_price = 1;         // 估算价格
  map<string, double> price_range = 2; // 价格区间 {min: xx, max: xx}
  double confidence = 3;              // 置信度 0-1
  string explanation = 4;             // 价格解释
}

// 优化商品信息请求
message OptimizeProductRequest {
  string title = 1;               // 商品标题
  string description = 2;         // 商品描述
  string category = 3;            // 商品分类
  string condition = 4;           // 商品成色
  double price = 5;               // 商品价格
  repeated string image_urls = 6; // 图片URL数组
  int64 user_id = 7;              // 用户ID
}

// 优化商品信息响应
message OptimizeProductResponse {
  string title = 1;                      // 优化后的标题
  string description = 2;                // 优化后的描述
  repeated string tags = 3;              // 优化后的标签
  double price_suggestion = 4;           // 价格建议
  map<string, string> improvements = 5;  // 改进建议
}